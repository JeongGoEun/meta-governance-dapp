{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport * as util from '../util';\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\nvar tableColumns = columns.achievementColumns;\nvar detailColumns = columns.achievementDetailColumns; // Test data\n\nvar newTopicData = [];\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\nvar children = [];\n\nfunction setTestData() {\n  for (var i = 0; i < topicListArr.length; i++) {\n    children.push(React.createElement(_Select.Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, topicListArr[i]));\n  }\n}\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props));\n    _this.data = {\n      items: [],\n      detailItems: [],\n      originItems: [],\n      originClaimTopics: [],\n      metaId: '',\n      achievementAddr: '0x7304f14b0909640acc4f6a192381091eb1f37702',\n      panes: [],\n      activeKey: '0',\n      newTabIndex: 1,\n      newTopicId: '',\n      newTitle: '',\n      newExplanation: '',\n      rowCount: 0\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      isTabChange: false,\n      isSearch: false,\n      getTopicInfo: false\n    };\n\n    _this.handleAdd = function (result) {\n      var newItem = {};\n      console.log(result); // result.map(({ key }) => {\n      //   switch (key) {\n      //     // case 'title':\n      //     case 'explanation':\n      //       newItem[key] = util.convertHexToString(result[key]);\n      //       break;\n      //     case 'claimTopics':\n      //       console.log('claimTopics: ',result[key]);\n      //       this.getClaimTopic(result[key]);\n      //       break;\n      //     case 'reward': \n      //       newItem[key] = web3.utils.fromWei(result[key], 'ether') + 'META';\n      //       break;\n      //     case 'createdAt':\n      //       newItem[key] = util.timeConverter(Date(result[key]));\n      //       break;\n      //     default:\n      //       if (result[key]) newItem[key] = result[key];\n      //       else newItem[key] = '';\n      //       break;\n      //   }\n      // });\n\n      _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n      _this.data.rowCount += 1;\n\n      _this.setState({\n        getTopicInfo: true\n      });\n    };\n\n    _this.showModal = function (record, type) {\n      switch (type) {\n        case 'add':\n          _this.setState({\n            addModalVisible: true,\n            qrModalVisible: false\n          });\n\n          break;\n\n        case 'qr':\n          _this.data['newTopicId'] = newTopicData['topic'];\n          _this.data['newTitle'] = newTopicData['title'];\n          _this.data['newExplanation'] = newTopicData['explanation'];\n\n          _this.setState({\n            addModalVisible: false,\n            qrModalVisible: true\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleClose = function (e) {\n      _this.setState({\n        addModalVisible: false,\n        qrModalVisible: false\n      });\n    };\n\n    _this.handleSelectChange = function (value) {\n      _this.data.panes[_this.data.activeKey]['title'] = topicListArr[value];\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      newTopicData[e.target.id] = e.target.value;\n      console.log('handle change: ', newTopicData);\n    };\n\n    _this.onSearchInputChange = function (e) {\n      _this.onSearch(e.target.value);\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (++_this.data.newTabIndex).toString();\n\n      _this.data.panes.push({\n        title: 'New Tab',\n        content: 'Content of new Tab',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var activeKey = _this.data.activeKey;\n      var lastIndex;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      _this.data['panes'] = panes;\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    setTestData();\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.data.items = this.data.originItems;\n      this.data.claimTopics = children;\n      this.data.panes.push({\n        title: 'New Tab',\n        content: 'Content of new Tab',\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        isTabChange: true\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.achievementDynamicLoading();\n    }\n  }, {\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // For test\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    console.log(ret);\n\n                    _this2.handleAdd(ret);\n                  },\n                  cb: function cb() {\n                    _this2.data.originItems = _this2.data.items;\n                    console.log('getAllAchievements done');\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getClaimTopic\",\n    value: function () {\n      var _getClaimTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(claimTopics) {\n        var rtn;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                rtn = []; // claimTopics.forEach(element => {\n                //   await this.props.contracts.topicRegistry.getTopic(element).then(\n                //     ret => { \n                //       ret['id'] = claimTopics[0]; console.log('getClaimTopic: ', ret); \n                //   });\n                // });    \n\n                console.log('getClaimTopic: ', rtn, claimTopics);\n                return _context2.abrupt(\"return\", rtn);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getClaimTopic(_x) {\n        return _getClaimTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      if (!value) {\n        this.data.items = this.data.originItems;\n      } else {\n        var searchedData = [];\n        this.data.originItems.forEach(function (element) {\n          //Exist value\n          Object.values(element).forEach(function (val) {\n            if (val.toLowerCase().includes(value.toLowerCase())) searchedData.push(element);\n          });\n        });\n        this.data.items = searchedData;\n      }\n\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"getModalTopicDetail\",\n    value: function getModalTopicDetail(record) {\n      _Modal.info({\n        width: '70%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Registered on: \", record.createdAt), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Address: \", record.achievementAddr), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, record.explanation), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Reward: \", record.reward), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Creator(Title / MetaID): \", record.creator, \" / \", record.metaId), React.createElement(_Table, {\n          rowKey: \"uid\" // columns 맞게 변경하기\n          ,\n          columns: detailColumns,\n          dataSource: this.data.items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this3 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.state.isTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this3.handleSelectChange,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, _this3.data.claimTopics), React.createElement(_Input, {\n          onChange: _this3.handleInputChange,\n          placeholder: \"Enter Meta ID of Issuer (Optional)\",\n          id: \"explanation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"getModalAddTopic\",\n    value: function getModalAddTopic() {\n      var _this4 = this;\n\n      return React.createElement(_Modal, {\n        width: \"50%\",\n        title: 'Add New Achievement',\n        visible: this.state.addModalVisible,\n        onOk: function onOk() {\n          return _this4.setState({\n            qrVisible: true\n          });\n        },\n        okText: \"Add\",\n        onCancel: function onCancel() {\n          return _this4.setState({\n            addModalVisible: false,\n            qrVisible: false\n          });\n        },\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"title\",\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        label: \"Reward\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"reward\",\n        placeholder: \"Input Reward\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        style: {\n          float: 'right',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"* Reward needs to be higher than 5\"), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(_Input.TextArea, {\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        id: \"explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), this.getTopicTabs()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this5.showModal('none', 'add');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: this.onSearchInputChange,\n        onSearch: function onSearch(value) {\n          return _this5.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })), React.createElement(_Table, {\n        rowKey: \"uid\",\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this5.getModalTopicDetail(record);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), this.getModalAddTopic());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","util","columns","web3","tableColumns","achievementColumns","detailColumns","achievementDetailColumns","newTopicData","topicListArr","children","setTestData","i","length","push","Achievement","props","data","items","detailItems","originItems","originClaimTopics","metaId","achievementAddr","panes","activeKey","newTabIndex","newTopicId","newTitle","newExplanation","rowCount","state","addModalVisible","qrVisible","isTabChange","isSearch","getTopicInfo","handleAdd","result","newItem","console","log","setState","showModal","record","type","qrModalVisible","handleClose","e","handleSelectChange","value","handleInputChange","target","id","onSearchInputChange","onSearch","onTabsChange","onTabsEdit","targetKey","action","add","toString","title","content","key","remove","lastIndex","forEach","pane","filter","claimTopics","closable","achievementDynamicLoading","contracts","achievementManager","getAllAchievements","handler","ret","cb","rtn","searchedData","element","Object","values","val","toLowerCase","includes","info","width","maskClosable","float","createdAt","margin","explanation","reward","creator","onOk","map","input","option","indexOf","color","minRows","maxRows","getTopicTabs","marginBottom","index","onClick","getModalTopicDetail","getModalAddTopic","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, List, Button, Select, Form, Tabs } from 'antd';\nimport * as util from '../util';\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\n\nconst tableColumns = columns.achievementColumns;\nconst detailColumns = columns.achievementDetailColumns;\n\n// Test data\nvar newTopicData = [];\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\n\nvar children = [];\n\nfunction setTestData() {\n  for (var i=0; i < topicListArr.length; i++) {\n      children.push(<Select.Option key={i}>{topicListArr[i]}</Select.Option>);\n  }\n}\n\nclass Achievement extends React.Component {\n  data = {\n    items: [],\n    detailItems: [],\n    originItems: [],\n    originClaimTopics: [],\n    metaId:'',\n    achievementAddr: '0x7304f14b0909640acc4f6a192381091eb1f37702',\n    panes: [],\n    activeKey: '0',\n    newTabIndex: 1,\n\n    newTopicId: '',\n    newTitle: '',\n    newExplanation: '',\n\n    rowCount: 0,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    isTabChange: false,\n    isSearch: false,\n    getTopicInfo: false,\n  }\n\n  constructor(props) {\n    super(props);\n    setTestData();\n  }\n\n  componentWillMount() {\n    this.data.items = this.data.originItems;\n    this.data.claimTopics = children;\n    this.data.panes.push({ title: 'New Tab', content: 'Content of new Tab', key: this.data.activeKey , closable: false});\n    this.setState({ isTabChange: true });\n  }\n\n  componentDidMount() {\n    this.achievementDynamicLoading();\n  }\n\n  async achievementDynamicLoading() {\n    // For test\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: (ret) => { console.log(ret); this.handleAdd(ret) },\n      cb: () => {this.data.originItems = this.data.items; console.log('getAllAchievements done')}\n    });\n  }\n\n  handleAdd = (result) => {\n    let newItem = {};\n    console.log(result);\n    // result.map(({ key }) => {\n    //   switch (key) {\n    //     // case 'title':\n    //     case 'explanation':\n    //       newItem[key] = util.convertHexToString(result[key]);\n    //       break;\n    //     case 'claimTopics':\n    //       console.log('claimTopics: ',result[key]);\n    //       this.getClaimTopic(result[key]);\n    //       break;\n    //     case 'reward': \n    //       newItem[key] = web3.utils.fromWei(result[key], 'ether') + 'META';\n    //       break;\n    //     case 'createdAt':\n    //       newItem[key] = util.timeConverter(Date(result[key]));\n    //       break;\n    //     default:\n    //       if (result[key]) newItem[key] = result[key];\n    //       else newItem[key] = '';\n    //       break;\n    //   }\n    // });\n    this.data.items = [...this.data.items, newItem];\n    this.data.rowCount += 1;\n    this.setState({ getTopicInfo: true });\n  }\n\n  async getClaimTopic(claimTopics) {\n    let rtn = [];\n    // claimTopics.forEach(element => {\n    //   await this.props.contracts.topicRegistry.getTopic(element).then(\n    //     ret => { \n    //       ret['id'] = claimTopics[0]; console.log('getClaimTopic: ', ret); \n    //   });\n    // });    \n    console.log('getClaimTopic: ', rtn, claimTopics);\n    return rtn;\n  }\n\n  showModal = (record, type) => {\n    switch(type) {\n      case 'add':\n        this.setState({\n          addModalVisible: true,\n          qrModalVisible: false,\n        });\n        break;\n      case 'qr':\n        this.data['newTopicId'] = newTopicData['topic'];\n        this.data['newTitle'] = newTopicData['title'];\n        this.data['newExplanation'] = newTopicData['explanation'];\n        this.setState({\n          addModalVisible: false,\n          qrModalVisible: true,\n        });\n        break;\n      default: break;\n    }\n  }\n\n  handleClose = (e) => {\n    this.setState({\n      addModalVisible: false,\n      qrModalVisible: false,    \n    });\n  }\n\n  handleSelectChange = (value) => {\n    this.data.panes[this.data.activeKey]['title'] = topicListArr[value];\n    this.setState({ isTabChange: true });\n  }\n\n  handleInputChange = (e) => {\n    newTopicData[e.target.id] = e.target.value;\n    console.log('handle change: ',newTopicData);\n  }\n\n  onSearch(value) {\n    if (! value) {\n      this.data.items = this.data.originItems;\n    } else {\n      var searchedData = [];\n      this.data.originItems.forEach(function(element) {\n        //Exist value\n        Object.values(element).forEach(function(val) {\n          if(val.toLowerCase().includes(value.toLowerCase()))\n          searchedData.push(element);\n        });\n      });\n      this.data.items = searchedData;\n    }\n    this.setState({ isSearch: true });\n  }\n\n  onSearchInputChange = (e) => {\n    this.onSearch(e.target.value);\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  add = () => {\n    this.data.activeKey = (++this.data.newTabIndex).toString();\n    this.data.panes.push({ title: 'New Tab', content: 'Content of new Tab', key: this.data.activeKey });\n    this.setState({ isTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let activeKey = this.data.activeKey;\n    let lastIndex;\n    this.data.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) lastIndex = i - 1;\n    });\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.data['panes'] = panes;\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  getModalTopicDetail(record) {\n    Modal.info({\n      width: '70%',\n      maskClosable: true,\n      title: record.title,\n      content: (\n        <div>\n          <h5 style={{ float: 'right' }}>Registered on: {record.createdAt}</h5>\n          <h3 style={{ margin: '10px 0 0 0' }}>Address: {record.achievementAddr}</h3>\n          <h3 style={{ margin: '10px 0 0 0' }}>{record.explanation}</h3>\n          <h3 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h3>\n          <h3 style={{ margin: '10px 0' }}>Creator(Title / MetaID): {record.creator} / {record.metaId}</h3>\n          <Table\n            rowKey=\"uid\"\n            // columns 맞게 변경하기\n            columns={ detailColumns }\n            dataSource={ this.data.items }\n          />\n        </div>\n      ),\n      onOk() {}\n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.isTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.handleSelectChange}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                {this.data.claimTopics}\n              </Select>\n              <Input\n                onChange={this.handleInputChange} \n                placeholder='Enter Meta ID of Issuer (Optional)'\n                id='explanation'\n              />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  getModalAddTopic() {\n    return <Modal\n      width='50%'\n      title={'Add New Achievement'}\n      visible={this.state.addModalVisible}\n      onOk={() => this.setState({ qrVisible: true })}\n      okText='Add'\n      onCancel={() => this.setState({ addModalVisible: false, qrVisible: false })}\n      closable={false}\n      >\n        <Form layout='inline'>\n          <Form.Item label='Title'>\n            <Input\n              onChange={this.handleInputChange}\n              id='title'\n              placeholder='Input Title'/>\n          </Form.Item>\n          <Form.Item label='Reward' style={{ float: 'right'}}>\n            <Input\n              onChange={this.handleInputChange}\n              id='reward'\n              placeholder='Input Reward'\n              addonAfter='META'/>\n          </Form.Item>\n        </Form>\n        <p style={{ float: 'right', color: 'red'}}>* Reward needs to be higher than 5</p>\n        <Form layout='vertical' style={{ margin: '30px 0'}}>\n          <Form.Item label='Explanation'>\n            <Input.TextArea\n              onChange={this.handleInputChange}\n              placeholder='Enter Explanation (max. 32 bytes)'\n              autosize={{ minRows: 2, maxRows: 6 }}\n              id='explanation'/>\n          </Form.Item>\n          {this.getTopicTabs()}\n        </Form>\n    </Modal>\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button \n            type='primary'\n            size='large'\n            onClick={() => this.showModal('none','add')}>Add New Achievement</Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={this.onSearchInputChange}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Table\n          rowKey=\"uid\"\n          onRow={(record, index) => ({ onClick: () => this.getModalTopicDetail(record) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.getModalAddTopic()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement};"]},"metadata":{},"sourceType":"module"}