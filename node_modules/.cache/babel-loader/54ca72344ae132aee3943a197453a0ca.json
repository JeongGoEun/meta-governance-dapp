{"ast":null,"code":"import \"antd/es/progress/style\";\nimport _Progress from \"antd/es/progress\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport { SendTransaction } from 'metasdk-react';\nimport web3 from '../ethereum/web3';\nimport { columns } from './columns';\nimport * as util from '../util';\nvar tableColumns = columns.achievementColumns;\nvar detailColumns = columns.achievementDetailColumns; // Test data\n\nvar topicListArr = [{\n  title: 'Legal Name',\n  id: 1030\n}, {\n  title: 'Phone Number',\n  id: 1031\n}, {\n  title: 'E-mail Address',\n  id: 1032\n}];\nvar children = [];\n\nfunction setTestData() {\n  for (var i = 0; i < topicListArr.length; i++) {\n    children.push(React.createElement(_Select.Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, topicListArr[i].title));\n  }\n}\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props)); // TODO: init topic tabs of AddAchieveModal\n\n    _this.data = {\n      items: [],\n      originItems: [],\n      originClaimTopics: [],\n      newAchievementItem: {\n        title: '',\n        topic: [],\n        explanation: '',\n        reward: '',\n        issuer: ''\n      },\n      inputValidData: [],\n      topicIssuerMap: [],\n      panes: [],\n      activeKey: '0',\n      tabIndex: 1,\n      loadedAchieveCnt: 0,\n      totalAchieveCnt: 1\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      didTabChange: false,\n      didSearch: false,\n      loading: false,\n      getTopicInfo: false\n    };\n\n    _this.handleItemAdd =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ret) {\n        var newItem;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ++_this.data.loadedAchieveCnt;\n\n                if (ret) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return _this.getAchievementFromMap(ret);\n\n              case 5:\n                newItem = _context.sent;\n                _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n                _this.data.originItems = _this.data.items;\n\n                _this.setState({\n                  getTopicInfo: true\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.updateNewAchieveInfo = function (e) {\n      switch (e.target.id) {\n        case 'title':\n        case 'explanation':\n          if (util.isValidLength(e.target.value) > 32) {\n            _message.error('Input exceeds maximum range!');\n\n            e.target.style.borderColor = 'red';\n            e.target.value = _this.data.inputValidData[e.target.id];\n          } else e.target.style.borderColor = '#3db389';\n\n          _this.data.inputValidData[e.target.id] = e.target.value;\n          _this.data.newAchievementItem[e.target.id] = e.target.value;\n          break;\n\n        case 'reward':\n          if (e.target.value < 5) e.target.style.borderColor = 'red'; // 아예 5미만이면 저장을 안해서 에러발생 하도록\n          else {\n              e.target.style.borderColor = '#3db389';\n              _this.data.newAchievementItem[e.target.id] = e.target.value;\n            }\n          break;\n\n        case 'issuer':\n          if (!e.target.value || !web3.utils.isAddress(e.target.value)) {\n            e.target.style.borderColor = 'red';\n\n            _message.error('Input correct address!');\n          } else {\n            e.target.style.borderColor = '#3db389';\n            Object.values(_this.data.panes).forEach(function (element, i) {\n              if (element.key === _this.data.activeKey) {\n                _this.data.panes[i].issuer = e.target.value;\n              }\n            });\n            _this.data.newAchievementItem[e.target.id] = e.target.value;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.onTopicClick = function (value) {\n      if (_this.data.panes.filter(function (element) {\n        return element.title === topicListArr[value].title;\n      }).length > 0) {\n        return _message.error('Selected duplicate topic.');\n      }\n\n      Object.values(_this.data.panes).forEach(function (element, i) {\n        if (element.key === _this.data.activeKey) {\n          _this.data.panes[i].title = _this.data.originClaimTopics[value].props.children;\n        }\n      });\n\n      _this.data.newAchievementItem.topic.push({\n        title: topicListArr[value].title,\n        id: topicListArr[value].id\n      });\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.onAddClick = function () {\n      var formCheck = true;\n      Object.keys(_this.data.newAchievementItem).map(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(key) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (key === 'topic' && _this.data.newAchievementItem[key].length === 0) formCheck = false;else if (!_this.data.newAchievementItem[key]) formCheck = false;\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      console.log('newAchive', _this.data.newAchievementItem);\n      if (formCheck) _this.setState({\n        qrVisible: true\n      });else _message.error('Failed cause red box or Select at least one topic!');\n    };\n\n    _this.onCancelClick = function () {\n      _this.data.newAchievementItem = {\n        title: '',\n        topic: [],\n        explanation: '',\n        reward: '',\n        issuer: ''\n      };\n\n      _this.setState({\n        addModalVisible: false,\n        qrVisible: false\n      });\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (_this.data.tabIndex++).toString();\n\n      _this.data.panes.push({\n        title: 'New Topic',\n        content: 'Content of new tab',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var activeKey = _this.data.activeKey;\n      var lastIndex;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      _this.data.panes = panes;\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    setTestData();\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.props.contracts.achievementManager.getLengthOfAchievements();\n\n              case 2:\n                this.data.totalAchieveCnt = _context3.sent;\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    return _this2.handleItemAdd(ret);\n                  },\n                  cb: function cb() {\n                    _this2.data.loadedAchieveCnt = _this2.data.totalAchieveCnt;\n\n                    _this2.setState({\n                      loading: true\n                    });\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.achievementDynamicLoading(); // Init tab value\n\n      this.data.originClaimTopics = children;\n      this.data.panes.push({\n        title: 'New Topic',\n        content: '',\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        didTabChange: true\n      }); // test\n\n      this.test = {\n        topics: [1025, 1026, 1027],\n        issuers: ['0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37701']\n      };\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      var regex = new RegExp(value, 'i');\n      if (!value) this.data.items = this.data.originItems;else this.data.items = this.data.originItems.filter(function (element) {\n        return Object.values(element).filter(function (val) {\n          return val.toString().match(regex);\n        }).length > 0;\n      });\n      this.setState({\n        didSearch: true\n      });\n    }\n  }, {\n    key: \"getClaimTopic\",\n    value: function () {\n      var _getClaimTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(claimTopics) {\n        var _this3 = this;\n\n        var rtn;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rtn = [];\n                _context5.next = 3;\n                return util.asyncForEach(claimTopics,\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee4(element) {\n                    var topic;\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return _this3.props.contracts.topicRegistry.getTopic(element);\n\n                          case 2:\n                            topic = _context4.sent;\n                            topic['id'] = element;\n                            rtn.push(util.refine(topic));\n\n                          case 5:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, this);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context5.abrupt(\"return\", rtn);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getClaimTopic(_x3) {\n        return _getClaimTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAchievementFromMap\",\n    value: function () {\n      var _getAchievementFromMap = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(m) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                util.refine(m);\n\n                if (!m.claimTopics) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                _context6.next = 4;\n                return this.getClaimTopic(m.claimTopics);\n\n              case 4:\n                m.claimTopics = _context6.sent;\n\n              case 5:\n                return _context6.abrupt(\"return\", m);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function getAchievementFromMap(_x5) {\n        return _getAchievementFromMap.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getModalAchievementDetail\",\n    value: function getModalAchievementDetail(record, index) {\n      _Modal.info({\n        width: '50%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            float: 'right',\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"Registered on: \", record.createdAt), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"Address: \", record.id), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Explanation: \", record.explanation), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"Reward: \", record.reward), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Creator: Metadium / \", record.creator), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Required Topic\")), React.createElement(_Table, {\n          size: \"small\",\n          rowKey: \"id\",\n          columns: detailColumns,\n          dataSource: record.claimTopics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this4 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.didTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this4.onTopicClick,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, _this4.data.originClaimTopics), React.createElement(_Input, {\n          onChange: _this4.updateNewAchieveInfo,\n          placeholder: \"Enter Meta ID of Issuer\",\n          id: \"issuer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"getModalAddAchievement\",\n    value: function getModalAddAchievement() {\n      return React.createElement(_Modal, {\n        width: \"40%\",\n        title: \"Add New Achievement\",\n        visible: this.state.addModalVisible,\n        onOk: this.onAddClick,\n        okText: \"Add\",\n        onCancel: this.onCancelClick,\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, this.state.qrVisible ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Scan QR Code to Add New Achievement\"), React.createElement(SendTransaction, {\n        id: \"sendTransaction\",\n        request: this.props.contracts.achievementManager.createAchievement(this.test.topics, this.test.issuers, Buffer.from('title'), Buffer.from('explan'), web3.utils.toWei(this.data.newAchievementItem.reward.toString(), 'ether'), 'uri'),\n        usage: \"createAchievement\",\n        service: \"metagate\",\n        callbackUrl: \"none\",\n        qrsize: 256,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          marginTop: '6%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Title: \", this.data.newAchievementItem.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Reward: \", this.data.newAchievementItem.reward, \" META\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Title\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        onChange: this.updateNewAchieveInfo,\n        id: \"title\",\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(_Col, {\n        span: 11,\n        offset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Reward\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        type: \"number\",\n        onChange: this.updateNewAchieveInfo,\n        id: \"reward\",\n        placeholder: \"Input Reward\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        style: {\n          float: 'right',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"* Reward needs to be higher than 5\"), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(_Input.TextArea, {\n        onChange: this.updateNewAchieveInfo,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        autosize: {\n          minRows: 1,\n          maxRows: 1\n        },\n        id: \"explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), this.getTopicTabs())));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this5.setState({\n            addModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: function onChange(e) {\n          return _this5.onSearch(e.target.value);\n        },\n        onSearch: function onSearch(value) {\n          return _this5.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })), React.createElement(_Progress, {\n        type: \"line\",\n        percent: +Number(this.data.loadedAchieveCnt / this.data.totalAchieveCnt * 100).toFixed(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        // rowKey={record => record.uid}\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this5.getModalAchievementDetail(record, index);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), this.getModalAddAchievement());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","SendTransaction","web3","columns","util","tableColumns","achievementColumns","detailColumns","achievementDetailColumns","topicListArr","title","id","children","setTestData","i","length","push","Achievement","props","data","items","originItems","originClaimTopics","newAchievementItem","topic","explanation","reward","issuer","inputValidData","topicIssuerMap","panes","activeKey","tabIndex","loadedAchieveCnt","totalAchieveCnt","state","addModalVisible","qrVisible","didTabChange","didSearch","loading","getTopicInfo","handleItemAdd","ret","getAchievementFromMap","newItem","setState","updateNewAchieveInfo","e","target","isValidLength","value","error","style","borderColor","utils","isAddress","Object","values","forEach","element","key","onTabsChange","onTabsEdit","targetKey","action","onTopicClick","filter","onAddClick","formCheck","keys","map","console","log","onCancelClick","add","toString","content","remove","lastIndex","pane","contracts","achievementManager","getLengthOfAchievements","getAllAchievements","handler","cb","achievementDynamicLoading","closable","test","topics","issuers","regex","RegExp","val","match","claimTopics","rtn","asyncForEach","topicRegistry","getTopic","refine","m","getClaimTopic","record","index","info","width","maskClosable","float","marginBottom","createdAt","margin","creator","marginTop","onOk","input","option","toLowerCase","indexOf","createAchievement","Buffer","from","toWei","color","minRows","maxRows","getTopicTabs","onSearch","Number","toFixed","onClick","getModalAchievementDetail","getModalAddAchievement","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, Row, Col, Button, Select, Form, Tabs, message, Progress } from 'antd';\nimport { SendTransaction } from 'metasdk-react';\n\nimport web3 from '../ethereum/web3';\nimport { columns } from './columns';\nimport * as util from '../util';\n\nconst tableColumns = columns.achievementColumns;\nconst detailColumns = columns.achievementDetailColumns;\n\n// Test data\nvar topicListArr = [\n  {title: 'Legal Name', id: 1030},\n  {title: 'Phone Number', id: 1031},\n  {title: 'E-mail Address', id: 1032},\n];\nvar children = [];\n\nfunction setTestData() {\n  for (var i=0; i < topicListArr.length; i++) {\n    children.push(<Select.Option key={i}>{topicListArr[i].title}</Select.Option>);\n  }\n}\n\nclass Achievement extends React.Component {\n\n  data = {\n    items: [],\n    originItems: [],\n    originClaimTopics: [],\n    newAchievementItem: { title: '', topic: [], explanation: '', reward: '', issuer: '' },\n    inputValidData: [],\n    topicIssuerMap: [],\n    panes: [],\n    activeKey: '0',\n    tabIndex: 1,\n    loadedAchieveCnt: 0,\n    totalAchieveCnt: 1,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    didTabChange: false,\n    didSearch: false,\n    loading: false,\n    getTopicInfo: false,\n  };\n\n  constructor(props) {\n    super(props);\n    // TODO: init topic tabs of AddAchieveModal\n    setTestData();\n  }\n\n  async achievementDynamicLoading() {\n    this.data.totalAchieveCnt = await this.props.contracts.achievementManager.getLengthOfAchievements();\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: (ret) => this.handleItemAdd(ret),\n      cb: () => { this.data.loadedAchieveCnt = this.data.totalAchieveCnt; this.setState({ loading: true }); }\n    });\n  }\n\n  componentDidMount() {\n    this.achievementDynamicLoading();\n\n    // Init tab value\n    this.data.originClaimTopics = children;\n    this.data.panes.push({ title: 'New Topic', content: '', key: this.data.activeKey , closable: false });\n    this.setState({ didTabChange: true });\n\n    // test\n    this.test = {\n      topics: [1025,1026,1027],\n      issuers: ['0x7304f14b0909640acc4f6a192381091eb1f37701','0x7304f14b0909640acc4f6a192381091eb1f37701','0x7304f14b0909640acc4f6a192381091eb1f37701'],\n    };\n  }\n\n  handleItemAdd = async (ret) => {\n    ++this.data.loadedAchieveCnt;\n    if (!ret) return;\n\n    let newItem = await this.getAchievementFromMap(ret);\n    this.data.items = [...this.data.items, newItem];\n    this.data.originItems = this.data.items;\n    this.setState({ getTopicInfo: true });\n  }\n\n  updateNewAchieveInfo = (e) => {\n    switch (e.target.id) {\n      case 'title':\n      case 'explanation':\n        if (util.isValidLength(e.target.value) > 32) {\n          message.error('Input exceeds maximum range!');\n          e.target.style.borderColor = 'red';\n          e.target.value = this.data.inputValidData[e.target.id];\n        } else e.target.style.borderColor = '#3db389';\n\n        this.data.inputValidData[e.target.id] = e.target.value;\n        this.data.newAchievementItem[e.target.id] = e.target.value;\n        break;\n      case 'reward':\n        if (e.target.value < 5) e.target.style.borderColor = 'red'; // 아예 5미만이면 저장을 안해서 에러발생 하도록\n        else { \n          e.target.style.borderColor = '#3db389'; \n          this.data.newAchievementItem[e.target.id] = e.target.value;\n        }\n        break;\n      case 'issuer':\n        if( ! e.target.value || ! web3.utils.isAddress(e.target.value)) {\n          e.target.style.borderColor = 'red';\n          message.error('Input correct address!');\n        } else {\n          e.target.style.borderColor = '#3db389'; \n          Object.values(this.data.panes).forEach((element, i) => {\n            if (element.key === this.data.activeKey) {this.data.panes[i].issuer = e.target.value}\n          });\n          this.data.newAchievementItem[e.target.id] = e.target.value;\n        }\n        break;\n      default: break;\n    }\n  }\n\n  onSearch(value) {\n    var regex = new RegExp(value, 'i');\n    if (! value) this.data.items = this.data.originItems;\n    else this.data.items = this.data.originItems.filter(element => Object.values(element).filter(val => val.toString().match(regex)).length > 0);\n    this.setState({ didSearch: true });\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ didTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  onTopicClick = (value) => {\n    if (this.data.panes.filter(element => element.title === topicListArr[value].title).length > 0) {\n      return message.error('Selected duplicate topic.');\n    }\n    Object.values(this.data.panes).forEach((element, i) => {\n      if (element.key === this.data.activeKey) {this.data.panes[i].title = this.data.originClaimTopics[value].props.children;}\n    });\n    this.data.newAchievementItem.topic.push({title: topicListArr[value].title, id: topicListArr[value].id});\n    this.setState({ didTabChange: true });\n  }\n\n  onAddClick = () => {\n    var formCheck = true;\n    Object.keys(this.data.newAchievementItem).map(async (key) => {\n      if (key === 'topic' && this.data.newAchievementItem[key].length === 0) formCheck = false;\n      else if (! this.data.newAchievementItem[key]) formCheck = false;\n    });\n    console.log('newAchive', this.data.newAchievementItem);\n    if (formCheck) this.setState({ qrVisible: true });\n    else message.error('Failed cause red box or Select at least one topic!');\n  }\n\n  onCancelClick = () => {\n    this.data.newAchievementItem = { title: '', topic: [], explanation: '', reward: '', issuer: '' };\n    this.setState({ addModalVisible: false, qrVisible: false });\n  }\n\n  async getClaimTopic(claimTopics) {\n    var rtn = [];\n    await util.asyncForEach(claimTopics, async (element) => {\n      var topic = await this.props.contracts.topicRegistry.getTopic(element);\n      topic['id'] = element;\n      rtn.push(util.refine(topic));\n    });\n    return rtn;\n  }\n\n  async getAchievementFromMap(m) {\n    util.refine(m);\n    if (m.claimTopics) m.claimTopics = await this.getClaimTopic(m.claimTopics);\n    return m;\n  }\n\n  getModalAchievementDetail(record, index) {\n    Modal.info({\n      width: '50%',\n      maskClosable: true,\n      title: record.title,\n      content: (\n        <div>\n          <h5 style={{ float: 'right', marginBottom: '10px'}}>Registered on: {record.createdAt}</h5> \n          <h3 style={{ margin: '10px 0 0 0' }}>Address: {record.id}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Explanation: {record.explanation}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h3> <hr />\n          <h3 style={{ margin: '10px 0' }}>Creator: Metadium / {record.creator}</h3> <hr />\n          <center><h3 style={{ marginTop: '30px' }}>Required Topic</h3></center>\n          <Table size='small' rowKey='id' columns={detailColumns} dataSource={record.claimTopics} />\n        </div>\n      ),\n      onOk() {}\n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.didTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.onTopicClick}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              >\n                {this.data.originClaimTopics}\n              </Select>\n              <Input\n                onChange={this.updateNewAchieveInfo} \n                placeholder='Enter Meta ID of Issuer'\n                id='issuer'\n              />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  getModalAddAchievement() {\n    return <Modal\n      width='40%'\n      title='Add New Achievement'\n      visible={this.state.addModalVisible}\n      onOk={this.onAddClick}\n      okText='Add'\n      onCancel={this.onCancelClick}\n      closable={false}\n      >\n      {this.state.qrVisible ?\n        <div><center>\n          <h1>Scan QR Code to Add New Achievement</h1>\n          <SendTransaction\n            id='sendTransaction'\n            request={this.props.contracts.achievementManager.createAchievement(\n              this.test.topics,\n              this.test.issuers,\n              Buffer.from('title'),\n              Buffer.from('explan'),\n              web3.utils.toWei(this.data.newAchievementItem.reward.toString(), 'ether'),\n              'uri')}\n            usage='createAchievement'\n            service='metagate'\n            callbackUrl='none'\n            qrsize={256}\n          />\n          <h2 style={{ marginTop: '6%' }} >Title: {this.data.newAchievementItem.title}</h2>\n          <h2>Reward: {this.data.newAchievementItem.reward} META</h2>\n        </center></div>\n        :\n        <div>\n          <Row>\n            <Col span={12}>\n              Title<br />\n              <Input onChange={this.updateNewAchieveInfo} id='title' placeholder='Input Title' />\n            </Col>\n            <Col span={11} offset={1}>\n              Reward<br />\n              <Input type='number' onChange={this.updateNewAchieveInfo} id='reward' placeholder='Input Reward' addonAfter='META' />\n            </Col>\n          </Row>\n          <p style={{ float: 'right', color: 'red' }}>* Reward needs to be higher than 5</p>\n          <Form layout='vertical' style={{ margin: '30px 0' }}>\n            <Form.Item label='Explanation'>\n              <Input.TextArea\n                onChange={this.updateNewAchieveInfo}\n                placeholder='Enter Explanation (max. 32 bytes)'\n                autosize={{ minRows: 1, maxRows: 1 }}\n                id='explanation'\n              />\n            </Form.Item>\n            {this.getTopicTabs()}\n          </Form>\n        </div>\n        }\n    </Modal>\n  }\n\n  add = () => {\n    this.data.activeKey = (this.data.tabIndex++).toString();\n    this.data.panes.push({ title: 'New Topic', content: 'Content of new tab', key: this.data.activeKey });\n    this.setState({ didTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let activeKey = this.data.activeKey;\n    let lastIndex;\n    this.data.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) lastIndex = i - 1;\n    });\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.data.panes = panes;\n    this.data.activeKey = activeKey;\n    this.setState({ didTabChange: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button\n            type='primary'\n            size='large'\n            onClick={() => this.setState({ addModalVisible: true })}>Add New Achievement</Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={e => this.onSearch(e.target.value)}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Progress type='line' percent={ +Number(this.data.loadedAchieveCnt / this.data.totalAchieveCnt * 100).toFixed(2) } /><br /><br />\n        <Table\n          // rowKey={record => record.uid}\n          onRow={(record, index) => ({ onClick: () => this.getModalAchievementDetail(record, index) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.getModalAddAchievement()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement}"]},"metadata":{},"sourceType":"module"}