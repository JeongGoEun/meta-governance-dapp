{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport { columns } from './columns';\nimport * as util from '../util';\nvar tableColumns = columns.achievementColumns;\nvar detailColumns = columns.achievementDetailColumns; // Test data\n\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\nvar children = [];\n\nfunction setTestData() {\n  for (var i = 0; i < topicListArr.length; i++) {\n    children.push(React.createElement(_Select.Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, topicListArr[i]));\n  }\n}\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props));\n    _this.data = {\n      items: [],\n      originItems: [],\n      originClaimTopics: [],\n      newAchievementItem: [],\n      inputValidData: [],\n      panes: [],\n      activeKey: '0',\n      tabIndex: 1\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      isTabChange: false,\n      isSearch: false,\n      getTopicInfo: false\n    };\n\n    _this.handleItemAdd =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(result) {\n        var newItem;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.getAchievementFromMap(result);\n\n              case 2:\n                newItem = _context.sent;\n                _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n                _this.data.originItems = _this.data.items;\n\n                _this.setState({\n                  getTopicInfo: true\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSelectChange = function (value) {\n      for (var i = 0; i < _this.data.panes.length; i++) {\n        if (_this.data.panes[i].title == topicListArr[value]) {\n          _message.error('Selected duplicate topic.');\n\n          return;\n        }\n      }\n\n      _this.data.panes[_this.data.activeKey]['title'] = _this.data.originClaimTopics[value].props['children'];\n\n      _this.data.newAchievementItem['topic'].push({\n        value: topicListArr[value]\n      });\n\n      console.log(_this.data.newAchievementItem);\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      // Add new achievement\n      switch (e.target.id) {\n        case 'title':\n        case 'explanation':\n          if (new TextEncoder('utf-8').encode(e.target.value).length > 32) {\n            _message.error('Input exceeds maximum range!');\n\n            e.target.style.borderColor = 'red';\n            e.target.value = _this.data.inputValidData[e.target.id];\n          } else {\n            e.target.style.borderColor = '#3db389';\n            _this.data.inputValidData[e.target.id] = e.target.value;\n          }\n\n          break;\n\n        case 'reward':\n          if (e.target.value < 5) {\n            e.target.style.borderColor = 'red';\n          } else {\n            e.target.style.borderColor = '#3db389';\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.data.newAchievementItem[e.target.id] = e.target.value;\n    };\n\n    _this.onSearchInputChange = function (e) {\n      _this.onSearch(e.target.value);\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.onAddClick = function () {// if(Object.keys(this.data.newAchievementItem).length < 3) {\n      //   console.log(document);\n      // }\n      // Object.keys(this.data.newAchievementItem).map(async (key) => {\n      //   var data = this.data.newAchievementItem[key];\n      //   switch (key) {\n      //     case 'title':\n      //       break;\n      //     case 'reward':\n      //       if (data < 5) {\n      //         //5보다 작을 때 처리\n      //       }\n      //       break;\n      //     case 'explanation':\n      //       let strBytes = new TextEncoder('utf-8').encode(data).length;\n      //       if (strBytes > 32) {\n      //       }\n      //       break;\n      //     default: break;\n      //   }\n      // });\n      //this.setState({ qrVisible: true });\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (_this.data.tabIndex++).toString();\n\n      _this.data.panes.push({\n        title: 'New Topic',\n        content: 'Content of new tab',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var activeKey = _this.data.activeKey;\n      var lastIndex;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      _this.data.panes = panes;\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.data.newAchievementItem['topic'] = []; // TODO: init topic tabs of AddAchivModal\n\n    setTestData();\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    return _this2.handleItemAdd(ret);\n                  },\n                  cb: function cb() {}\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.achievementDynamicLoading(); // Init tab value\n\n      this.data.originClaimTopics = children;\n      this.data.panes.push({\n        title: 'New Topic',\n        content: '',\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        isTabChange: true\n      });\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      if (!value) this.data.items = this.data.originItems;else {\n        var searchedData = [];\n        value = value.toLowerCase();\n        this.data.originItems.forEach(function (element) {\n          var found = false;\n          Object.values(element).forEach(function (val) {\n            if (found) return;else if (val.toString().toLowerCase().includes(value)) {\n              found = true;\n              searchedData.push(element);\n            }\n          });\n        });\n        this.data.items = searchedData;\n      }\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"getClaimTopic\",\n    value: function () {\n      var _getClaimTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(claimTopics) {\n        var _this3 = this;\n\n        var rtn;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                rtn = [];\n                _context4.next = 3;\n                return util.asyncForEach(claimTopics,\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(element) {\n                    var topic;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return _this3.props.contracts.topicRegistry.getTopic(element);\n\n                          case 2:\n                            topic = _context3.sent;\n                            topic['id'] = element;\n                            rtn.push(util.refine(topic));\n\n                          case 5:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, this);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context4.abrupt(\"return\", rtn);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getClaimTopic(_x2) {\n        return _getClaimTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAchievementFromMap\",\n    value: function () {\n      var _getAchievementFromMap = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(m) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                util.refine(m);\n\n                if (!m.claimTopics) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                _context5.next = 4;\n                return this.getClaimTopic(m.claimTopics);\n\n              case 4:\n                m.claimTopics = _context5.sent;\n\n              case 5:\n                return _context5.abrupt(\"return\", m);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getAchievementFromMap(_x4) {\n        return _getAchievementFromMap.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getModalAchievementDetail\",\n    value: function getModalAchievementDetail(record, index) {\n      _Modal.info({\n        width: '50%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            float: 'right',\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Registered on: \", record.createdAt), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Address: \", record.id), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Explanation: \", record.explanation), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Reward: \", record.reward), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Creator: Metadium / \", record.creator), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Required Topic\")), React.createElement(_Table, {\n          size: \"small\",\n          rowKey: \"uid\",\n          columns: detailColumns,\n          dataSource: record.claimTopics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this4 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.isTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this4.handleSelectChange,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, _this4.data.originClaimTopics), React.createElement(_Input, {\n          onChange: _this4.handleInputChange,\n          placeholder: \"Enter Meta ID of Issuer (Optional)\",\n          id: \"issuer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"getModalAddAchievement\",\n    value: function getModalAddAchievement() {\n      var _this5 = this;\n\n      return React.createElement(_Modal, {\n        width: \"40%\",\n        title: 'Add New Achievement',\n        visible: this.state.addModalVisible,\n        onOk: this.onAddClick,\n        okText: \"Add\",\n        onCancel: function onCancel() {\n          return _this5.setState({\n            addModalVisible: false,\n            qrVisible: false\n          });\n        },\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.qrVisible ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, Object.keys(this.data.newAchievementItem).map(function (key) {\n        return key + ':' + _this5.data.newAchievementItem[key] + \" // \";\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Title\",\n        style: {\n          marginBottom: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"title\",\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))), React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Reward\",\n        style: {\n          float: 'right',\n          marginTop: '0.7%',\n          marginBottom: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        type: \"number\",\n        onChange: this.handleInputChange,\n        id: \"reward\",\n        placeholder: \"Input Reward\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))), React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          float: 'right',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"* Reward needs to be higher than 5\")), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(_Input.TextArea, {\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        autosize: {\n          minRows: 1,\n          maxRows: 3\n        },\n        id: \"explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), this.getTopicTabs())));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this6.setState({\n            addModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: this.onSearchInputChange,\n        onSearch: function onSearch(value) {\n          return _this6.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })), React.createElement(_Table, {\n        rowKey: function rowKey(record) {\n          return record.uid;\n        },\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this6.getModalAchievementDetail(record, index);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), this.getModalAddAchievement());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","columns","util","tableColumns","achievementColumns","detailColumns","achievementDetailColumns","topicListArr","children","setTestData","i","length","push","Achievement","props","data","items","originItems","originClaimTopics","newAchievementItem","inputValidData","panes","activeKey","tabIndex","state","addModalVisible","qrVisible","isTabChange","isSearch","getTopicInfo","handleItemAdd","result","getAchievementFromMap","newItem","setState","handleSelectChange","value","title","error","console","log","handleInputChange","e","target","id","TextEncoder","encode","style","borderColor","onSearchInputChange","onSearch","onTabsChange","onTabsEdit","targetKey","action","onAddClick","add","toString","content","key","remove","lastIndex","forEach","pane","filter","contracts","achievementManager","getAllAchievements","handler","ret","cb","achievementDynamicLoading","closable","searchedData","toLowerCase","element","found","Object","values","val","includes","claimTopics","rtn","asyncForEach","topicRegistry","getTopic","topic","refine","m","getClaimTopic","record","index","info","width","maskClosable","float","marginBottom","createdAt","margin","explanation","reward","creator","marginTop","onOk","map","input","option","indexOf","keys","color","minRows","maxRows","getTopicTabs","uid","onClick","getModalAchievementDetail","getModalAddAchievement","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, Row, Col, Button, Select, Form, Tabs, message } from 'antd';\nimport { columns } from './columns';\nimport * as util from '../util';\n\nconst tableColumns = columns.achievementColumns;\nconst detailColumns = columns.achievementDetailColumns;\n\n// Test data\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\nvar children = [];\n\nfunction setTestData() {\n  for (var i=0; i < topicListArr.length; i++) {\n      children.push(<Select.Option key={i}>{topicListArr[i]}</Select.Option>);\n  }\n}\n\nclass Achievement extends React.Component {\n  data = {\n    items: [],\n    originItems: [],\n    originClaimTopics: [],\n    newAchievementItem: [],\n    inputValidData: [],\n    panes: [],\n    activeKey: '0',\n    tabIndex: 1,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    isTabChange: false,\n    isSearch: false,\n    getTopicInfo: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.data.newAchievementItem['topic'] = [];\n    // TODO: init topic tabs of AddAchivModal\n    setTestData();\n  }\n\n  async achievementDynamicLoading() {\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: (ret) => this.handleItemAdd(ret),\n      cb: () => {}\n    });\n  }\n\n  componentDidMount() {\n    this.achievementDynamicLoading();\n\n    // Init tab value\n    this.data.originClaimTopics = children;\n    this.data.panes.push({ title: 'New Topic', content: '', key: this.data.activeKey , closable: false });\n    this.setState({ isTabChange: true });\n  }\n\n  handleItemAdd = async (result) => {\n    let newItem = await this.getAchievementFromMap(result);\n    this.data.items = [...this.data.items, newItem];\n    this.data.originItems = this.data.items;\n    this.setState({ getTopicInfo: true });\n  }\n\n  handleSelectChange = (value) => {\n    for (var i=0; i<this.data.panes.length; i++) {\n      if(this.data.panes[i].title == topicListArr[value]) {\n        message.error('Selected duplicate topic.');\n        return;\n      }\n    }\n    this.data.panes[this.data.activeKey]['title'] = this.data.originClaimTopics[value].props['children'];\n    this.data.newAchievementItem['topic'].push({value: topicListArr[value]});\n    console.log(this.data.newAchievementItem);\n    this.setState({ isTabChange: true });\n  }\n\n  handleInputChange = (e) => {\n    // Add new achievement\n    switch(e.target.id) {\n      case 'title':\n      case 'explanation':\n        if( new TextEncoder('utf-8').encode(e.target.value).length > 32) {\n          message.error('Input exceeds maximum range!');\n          e.target.style.borderColor = 'red';\n          e.target.value = this.data.inputValidData[e.target.id];\n        } else { e.target.style.borderColor = '#3db389'; this.data.inputValidData[e.target.id] = e.target.value; }\n        break\n      case 'reward':\n        if( e.target.value < 5) { e.target.style.borderColor = 'red' } else { e.target.style.borderColor = '#3db389' }\n        break\n      default: break\n    }\n    this.data.newAchievementItem[e.target.id] = e.target.value;\n  }\n\n  onSearch(value) {\n    if (! value) this.data.items = this.data.originItems;\n    else {\n      var searchedData = [];\n      value = value.toLowerCase();\n      this.data.originItems.forEach(element => {\n        let found = false;\n        Object.values(element).forEach(val => {\n          if (found) return;\n          else if (val.toString().toLowerCase().includes(value)) {\n            found = true;\n            searchedData.push(element);\n          }\n        });\n      });\n      this.data.items = searchedData;\n    }\n    this.setState({ isSearch: true });\n  }\n\n  onSearchInputChange = (e) => {\n    this.onSearch(e.target.value);\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  onAddClick = () => {\n    // if(Object.keys(this.data.newAchievementItem).length < 3) {\n    //   console.log(document);\n    // }\n\n    // Object.keys(this.data.newAchievementItem).map(async (key) => {\n    //   var data = this.data.newAchievementItem[key];\n    //   switch (key) {\n    //     case 'title':\n    //       break;\n    //     case 'reward':\n    //       if (data < 5) {\n    //         //5보다 작을 때 처리\n    //       }\n    //       break;\n    //     case 'explanation':\n    //       let strBytes = new TextEncoder('utf-8').encode(data).length;\n    //       if (strBytes > 32) {\n    //       }\n    //       break;\n    //     default: break;\n    //   }\n    // });\n    //this.setState({ qrVisible: true });\n  }\n\n  async getClaimTopic(claimTopics) {\n    var rtn = [];\n    await util.asyncForEach(claimTopics, async (element) => {\n      var topic = await this.props.contracts.topicRegistry.getTopic(element);\n      topic['id'] = element;\n      rtn.push(util.refine(topic));\n    });\n    return rtn;\n  }\n\n  async getAchievementFromMap(m) {\n    util.refine(m);\n    if (m.claimTopics) m.claimTopics = await this.getClaimTopic(m.claimTopics);\n    return m;\n  }\n\n  getModalAchievementDetail(record, index) {\n    Modal.info({\n      width: '50%',\n      maskClosable: true,\n      title: record.title,\n      content:\n      (<div>\n          <h5 style={{ float: 'right', marginBottom: '10px'}}>Registered on: {record.createdAt}</h5> \n          <h3 style={{ margin: '10px 0 0 0' }}>Address: {record.id}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Explanation: {record.explanation}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h3> <hr />\n          <h3 style={{ margin: '10px 0' }}>Creator: Metadium / {record.creator}</h3> <hr />\n          <center><h3 style={{ marginTop: '30px' }}>Required Topic</h3></center>\n          <Table size=\"small\" rowKey=\"uid\" columns={ detailColumns } dataSource={ record.claimTopics } />\n        </div>),\n      onOk() {}\n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.isTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.handleSelectChange}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                {this.data.originClaimTopics}\n              </Select>\n              <Input\n                onChange={this.handleInputChange} \n                placeholder='Enter Meta ID of Issuer (Optional)'\n                id='issuer'\n              />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  getModalAddAchievement() {\n    return <Modal\n      width='40%'\n      title={'Add New Achievement'}\n      visible={this.state.addModalVisible}\n      onOk={ this.onAddClick }\n      okText='Add'\n      onCancel={() => this.setState({ addModalVisible: false, qrVisible: false })}\n      closable={false}\n      >\n      {this.state.qrVisible ?\n        <div>\n          {Object.keys(this.data.newAchievementItem).map(key => { return key + ':' + this.data.newAchievementItem[key] + ` // `; })}\n        </div>\n        :\n        <div>\n          <Row>\n            <Col span={12}>\n              <Form.Item label='Title' style={{ marginBottom: '0px'}}>\n                <Input\n                  onChange={this.handleInputChange}\n                  id='title'\n                  placeholder='Input Title'/>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label='Reward' style={{ float: 'right', marginTop: '0.7%', marginBottom: '0px'}}>\n                <Input\n                  type='number'\n                  onChange={this.handleInputChange}\n                  id='reward'\n                  placeholder='Input Reward'\n                  addonAfter='META'/>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row>\n            <p style={{ float: 'right', color: 'red'}}>* Reward needs to be higher than 5</p>\n          </Row>\n          <Form layout='vertical' style={{ margin: '30px 0'}}>\n            <Form.Item label='Explanation'>\n              <Input.TextArea\n                onChange={this.handleInputChange}\n                placeholder='Enter Explanation (max. 32 bytes)'\n                autosize={{ minRows: 1, maxRows: 3 }}\n                id='explanation'/>\n            </Form.Item>\n            {this.getTopicTabs()}\n          </Form>\n        </div>\n        }\n    </Modal>\n  }\n\n  add = () => {\n    this.data.activeKey = (this.data.tabIndex++).toString();\n    this.data.panes.push({ title: 'New Topic', content: 'Content of new tab', key: this.data.activeKey });\n    this.setState({ isTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let activeKey = this.data.activeKey;\n    let lastIndex;\n    this.data.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) lastIndex = i - 1;\n    });\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.data.panes = panes;\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button \n            type='primary'\n            size='large'\n            onClick={() => this.setState({ addModalVisible: true })}>Add New Achievement</Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={this.onSearchInputChange}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Table\n          rowKey={record => record.uid}\n          onRow={(record, index) => ({ onClick: () => this.getModalAchievementDetail(record, index) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.getModalAddAchievement()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement};"]},"metadata":{},"sourceType":"module"}