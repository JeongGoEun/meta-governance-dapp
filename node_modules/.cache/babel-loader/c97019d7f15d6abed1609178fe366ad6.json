{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\nimport * as util from '../util';\nvar tableColumns = columns.achievementColumns;\nvar detailColumns = columns.achievementDetailColumns; // Test data\n\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\nvar children = [];\n\nfunction setTestData() {\n  for (var i = 0; i < topicListArr.length; i++) {\n    children.push(React.createElement(_Select.Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, topicListArr[i]));\n  }\n}\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props));\n    _this.data = {\n      items: [],\n      originItems: [],\n      originClaimTopics: [],\n      newAchievementItem: [],\n      panes: [],\n      activeKey: '0',\n      tabIndex: 1\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      isTabChange: false,\n      isSearch: false,\n      getTopicInfo: false\n    };\n\n    _this.handleItemAdd =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(result) {\n        var newItem;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                newItem = _this.getAchievementFromMap(result);\n                _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n\n                _this.setState({\n                  getTopicInfo: true\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSelectChange = function (value) {\n      _this.data.panes[_this.data.activeKey]['title'] = _this.data.originClaimTopics[value].props['children'];\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      // Add new achievement\n      _this.data.newAchievementItem[e.target.id] = e.target.value;\n    };\n\n    _this.onSearchInputChange = function (e) {\n      _this.onSearch(e.target.value);\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (_this.data.tabIndex++).toString();\n\n      _this.data.panes.push({\n        title: 'New Topic',\n        content: 'Content of new tab',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var activeKey = _this.data.activeKey;\n      var lastIndex;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      _this.data.panes = panes;\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    setTestData(); // --> Need using getAllTopic for tabs\n\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.achievementDynamicLoading(); // Init tab value\n\n      this.data.originClaimTopics = children;\n      this.data.panes.push({\n        title: 'New Topic',\n        content: '',\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        isTabChange: true\n      });\n    }\n  }, {\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    _this2.handleItemAdd(ret);\n                  },\n                  cb: function cb() {\n                    _this2.data.originItems = _this2.data.items;\n                    console.log('getAllAchievements done');\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      if (!value) {\n        this.data.items = this.data.originItems;\n      } else {\n        var searchedData = [];\n        this.data.originItems.forEach(function (element) {\n          //Exist value\n          Object.values(element).forEach(function (val) {\n            if (val.toLowerCase().includes(value.toLowerCase())) searchedData.push(element);\n          });\n        });\n        this.data.items = searchedData;\n      }\n\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"getClaimTopic\",\n    value: function () {\n      var _getClaimTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(claimTopics) {\n        var _this3 = this;\n\n        var rtn;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                rtn = [];\n                claimTopics.forEach(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(element) {\n                    var topic;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return _this3.props.contracts.topicRegistry.getTopic(element);\n\n                          case 2:\n                            topic = _context3.sent;\n                            topic['id'] = element;\n                            rtn.push(topic);\n\n                          case 5:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, this);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                return _context4.abrupt(\"return\", rtn);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getClaimTopic(_x2) {\n        return _getClaimTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAchievementFromMap\",\n    value: function getAchievementFromMap(result) {\n      var _this4 = this;\n\n      var rtn = {};\n      Object.keys(result).map(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee5(key) {\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.t0 = key;\n                  _context5.next = _context5.t0 === 'explanation' ? 3 : _context5.t0 === 'claimTopics' ? 5 : _context5.t0 === 'reward' ? 9 : _context5.t0 === 'createdAt' ? 11 : 13;\n                  break;\n\n                case 3:\n                  rtn[key] = util.convertHexToString(result[key]);\n                  return _context5.abrupt(\"return\", key);\n\n                case 5:\n                  _context5.next = 7;\n                  return _this4.getClaimTopic(result[key]);\n\n                case 7:\n                  rtn[key] = _context5.sent;\n                  return _context5.abrupt(\"return\", key);\n\n                case 9:\n                  rtn[key] = web3.utils.fromWei(result[key], 'ether') + 'META';\n                  return _context5.abrupt(\"return\", key);\n\n                case 11:\n                  rtn[key] = util.timeConverter(Date(result[key]));\n                  return _context5.abrupt(\"return\", key);\n\n                case 13:\n                  if (result[key]) rtn[key] = result[key];else rtn[key] = '';\n                  return _context5.abrupt(\"return\", key);\n\n                case 15:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n\n        return function (_x4) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      return rtn;\n    }\n  }, {\n    key: \"getModalAchievementDetail\",\n    value: function getModalAchievementDetail(record, index) {\n      _Modal.info({\n        width: '50%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            float: 'right',\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Registered on: \", record.createdAt), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Address: \", record.id), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Explanation: \", record.explanation), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Reward: \", record.reward), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Creator(Title / MetaID): \", record.title, \" / \", record.creator), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Required Topic\")), React.createElement(_Table, {\n          size: \"small\",\n          rowKey: \"uid\",\n          columns: detailColumns,\n          dataSource: record.claimTopics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this5 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.isTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this5.handleSelectChange,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, _this5.data.originClaimTopics), React.createElement(_Input, {\n          onChange: _this5.handleInputChange,\n          placeholder: \"Enter Meta ID of Issuer (Optional)\",\n          id: \"issuer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"getModalAddAchievement\",\n    value: function getModalAddAchievement() {\n      var _this6 = this;\n\n      return React.createElement(_Modal, {\n        width: \"50%\",\n        title: 'Add New Achievement',\n        visible: this.state.addModalVisible,\n        onOk: function onOk() {\n          return _this6.setState({\n            qrVisible: true\n          });\n        },\n        okText: \"Add\",\n        onCancel: function onCancel() {\n          return _this6.setState({\n            addModalVisible: false,\n            qrVisible: false\n          });\n        },\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"title\",\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        label: \"Reward\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"reward\",\n        placeholder: \"Input Reward\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        style: {\n          float: 'right',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"* Reward needs to be higher than 5\"), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(_Input.TextArea, {\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        id: \"explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), this.getTopicTabs()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this7.setState({\n            addModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: this.onSearchInputChange,\n        onSearch: function onSearch(value) {\n          return _this7.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })), React.createElement(_Table, {\n        rowKey: \"uid\",\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this7.getModalAchievementDetail(record, index);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), this.getModalAddAchievement());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","columns","web3","util","tableColumns","achievementColumns","detailColumns","achievementDetailColumns","topicListArr","children","setTestData","i","length","push","Achievement","props","data","items","originItems","originClaimTopics","newAchievementItem","panes","activeKey","tabIndex","state","addModalVisible","qrVisible","isTabChange","isSearch","getTopicInfo","handleItemAdd","result","newItem","getAchievementFromMap","setState","handleSelectChange","value","handleInputChange","e","target","id","onSearchInputChange","onSearch","onTabsChange","onTabsEdit","targetKey","action","add","toString","title","content","key","remove","lastIndex","forEach","pane","filter","achievementDynamicLoading","closable","contracts","achievementManager","getAllAchievements","handler","ret","cb","console","log","searchedData","element","Object","values","val","toLowerCase","includes","claimTopics","rtn","topicRegistry","getTopic","topic","keys","map","convertHexToString","getClaimTopic","utils","fromWei","timeConverter","Date","record","index","info","width","maskClosable","float","marginBottom","createdAt","margin","explanation","reward","creator","marginTop","onOk","input","option","indexOf","color","minRows","maxRows","getTopicTabs","onClick","getModalAchievementDetail","getModalAddAchievement","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, Button, Select, Form, Tabs } from 'antd';\n\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\nimport * as util from '../util';\n\nconst tableColumns = columns.achievementColumns;\nconst detailColumns = columns.achievementDetailColumns;\n\n// Test data\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\nvar children = [];\n\nfunction setTestData() {\n  for (var i=0; i < topicListArr.length; i++) {\n      children.push(<Select.Option key={i}>{topicListArr[i]}</Select.Option>);\n  }\n}\n\nclass Achievement extends React.Component {\n  data = {\n    items: [],\n    originItems: [],\n    originClaimTopics: [],\n    newAchievementItem: [],\n    panes: [],\n    activeKey: '0',\n    tabIndex: 1,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    isTabChange: false,\n    isSearch: false,\n    getTopicInfo: false,\n  }\n\n  constructor(props) {\n    super(props);\n    setTestData(); // --> Need using getAllTopic for tabs\n  }\n\n  componentDidMount() {\n    this.achievementDynamicLoading();\n\n    // Init tab value\n    this.data.originClaimTopics = children;\n    this.data.panes.push({ title: 'New Topic', content: '', key: this.data.activeKey , closable: false});\n    this.setState({ isTabChange: true });\n  }\n\n  async achievementDynamicLoading() {\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: (ret) => { this.handleItemAdd(ret) },\n      cb: () => {this.data.originItems = this.data.items; console.log('getAllAchievements done')}\n    });\n  }\n\n  handleItemAdd = async (result) => {\n    let newItem = this.getAchievementFromMap(result);\n    this.data.items = [...this.data.items, newItem];\n    this.setState({ getTopicInfo: true });\n  }\n\n  handleSelectChange = (value) => {\n    this.data.panes[this.data.activeKey]['title'] = this.data.originClaimTopics[value].props['children'];\n    this.setState({ isTabChange: true });\n  }\n\n  handleInputChange = (e) => {\n    // Add new achievement\n    this.data.newAchievementItem[e.target.id] = e.target.value;\n  }\n\n  onSearch(value) {\n    if (! value) {\n      this.data.items = this.data.originItems;\n    } else {\n      var searchedData = [];\n      this.data.originItems.forEach(function(element) {\n        //Exist value\n        Object.values(element).forEach(function(val) {\n          if(val.toLowerCase().includes(value.toLowerCase()))\n          searchedData.push(element);\n        });\n      });\n      this.data.items = searchedData;\n    }\n    this.setState({ isSearch: true });\n  }\n\n  onSearchInputChange = (e) => {\n    this.onSearch(e.target.value);\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  async getClaimTopic(claimTopics) {\n    var rtn = [];\n    claimTopics.forEach(async (element) => {\n      var topic = await this.props.contracts.topicRegistry.getTopic(element);\n      topic['id'] = element;\n      rtn.push(topic);\n    });\n    return rtn;\n  }\n\n  getAchievementFromMap(result) {\n    var rtn = {};\n    Object.keys(result).map(async (key) => {\n      switch (key) {\n        // case 'title':\n        case 'explanation': rtn[key] = util.convertHexToString(result[key]); return key;\n        case 'claimTopics': rtn[key] = await this.getClaimTopic(result[key]); return key;\n        case 'reward': rtn[key] = web3.utils.fromWei(result[key], 'ether') + 'META'; return key;\n        case 'createdAt': rtn[key] = util.timeConverter(Date(result[key])); return key;\n        default:\n          if (result[key]) rtn[key] = result[key];\n          else rtn[key] = '';\n          return key;\n      }\n    });\n    return rtn;\n  }\n\n  getModalAchievementDetail(record, index) {\n    Modal.info({\n      width: '50%',\n      maskClosable: true,\n      title: record.title,\n      content:\n      (<div>\n          <h5 style={{ float: 'right', marginBottom: '10px'}}>Registered on: {record.createdAt}</h5> \n          <h3 style={{ margin: '10px 0 0 0' }}>Address: {record.id}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Explanation: {record.explanation}</h3><hr />\n          <h3 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h3> <hr />\n          <h3 style={{ margin: '10px 0' }}>Creator(Title / MetaID): {record.title} / {record.creator}</h3> <hr />\n          <center><h3 style={{ marginTop: '30px' }}>Required Topic</h3></center>\n          <Table size=\"small\" rowKey=\"uid\" columns={ detailColumns } dataSource={ record.claimTopics } />\n        </div>),\n      onOk() {}\n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.isTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.handleSelectChange}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                {this.data.originClaimTopics}\n              </Select>\n              <Input\n                onChange={this.handleInputChange} \n                placeholder='Enter Meta ID of Issuer (Optional)'\n                id='issuer'\n              />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  getModalAddAchievement() {\n    return <Modal\n      width='50%'\n      title={'Add New Achievement'}\n      visible={this.state.addModalVisible}\n      onOk={() => this.setState({ qrVisible: true })}\n      okText='Add'\n      onCancel={() => this.setState({ addModalVisible: false, qrVisible: false })}\n      closable={false}\n      >\n        <Form layout='inline'>\n          <Form.Item label='Title'>\n            <Input\n              onChange={this.handleInputChange}\n              id='title'\n              placeholder='Input Title'/>\n          </Form.Item>\n          <Form.Item label='Reward' style={{ float: 'right'}}>\n            <Input\n              onChange={this.handleInputChange}\n              id='reward'\n              placeholder='Input Reward'\n              addonAfter='META'/>\n          </Form.Item>\n        </Form>\n        <p style={{ float: 'right', color: 'red'}}>* Reward needs to be higher than 5</p>\n        <Form layout='vertical' style={{ margin: '30px 0'}}>\n          <Form.Item label='Explanation'>\n            <Input.TextArea\n              onChange={this.handleInputChange}\n              placeholder='Enter Explanation (max. 32 bytes)'\n              autosize={{ minRows: 2, maxRows: 6 }}\n              id='explanation'/>\n          </Form.Item>\n          {this.getTopicTabs()}\n        </Form>\n    </Modal>\n  }\n\n  add = () => {\n    this.data.activeKey = (this.data.tabIndex++).toString();\n    this.data.panes.push({ title: 'New Topic', content: 'Content of new tab', key: this.data.activeKey });\n    this.setState({ isTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let activeKey = this.data.activeKey;\n    let lastIndex;\n    this.data.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) lastIndex = i - 1;\n    });\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.data.panes = panes;\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button \n            type='primary'\n            size='large'\n            onClick={() => this.setState({ addModalVisible: true })}>Add New Achievement</Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={this.onSearchInputChange}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Table\n          rowKey=\"uid\"\n          onRow={(record, index) => ({ onClick: () => this.getModalAchievementDetail(record, index) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.getModalAddAchievement()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement};"]},"metadata":{},"sourceType":"module"}