{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/User.js\";\nimport React from 'react';\nimport * as util from '../util'; // Test data\n\nvar storedData = [];\nvar typeArr = ['Personal', 'Institution'];\nvar titleArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar metaidArr = ['0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37702', '0x7304f14b0909640acc4f6a192381091eb1f37703', '0x7304f14b0909640acc4f6a192381091eb1f37704', '0x7304f14b0909640acc4f6a192381091eb1f37705', '0x7304f14b0909640acc4f6a192381091eb1f37706'];\nvar listData = ['Racing car sprays burning fuel into crowd.', 'Japanese princess to wed commoner.', 'Australian walks 100km after outback crash.', 'Man charged over missing wedding girl.', 'Los Angeles battles huge wildfires.'];\n\nfunction setTestData() {\n  for (var i = 0; i < 20; i++) {\n    // Get data (hardcoding)\n    storedData.push({\n      type: typeArr[Math.floor(Math.random() * 10 / 9)],\n      title: titleArr[Math.floor(Math.random() * 6)],\n      roll: rollArr[Math.floor(Math.random() * 10 / 9)],\n      metaID: metaidArr[Math.floor(Math.random() * 6)],\n      registerDate: util.timeConverter(Date.now())\n    });\n  }\n}\n\nvar columns = [{\n  title: 'Type',\n  dataIndex: 'type',\n  key: 'type',\n  sorter: function sorter(a, b) {\n    return a.type.length - b.type.length;\n  },\n  width: '10%'\n}, {\n  title: 'Title',\n  dataIndex: 'title',\n  key: 'title',\n  width: '25%'\n}, {\n  title: 'Roll',\n  dataIndex: 'roll',\n  key: 'roll',\n  filters: [{\n    text: 'AA',\n    value: 'Attestation Agency'\n  }, {\n    text: 'SP',\n    value: 'Service Provider'\n  }],\n  width: '20%',\n  filterMultiple: false,\n  onFilter: function onFilter(value, record) {\n    return record.roll.indexOf(value) === 0;\n  }\n}, {\n  title: 'Meta ID',\n  dataIndex: 'metaID',\n  key: 'metaID',\n  width: '35%'\n}, {\n  title: 'Registered on',\n  dataIndex: 'registerDate',\n  key: 'registerDate',\n  width: '10%'\n}];\n\nvar User =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(User, _React$Component);\n\n  function User() {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this));\n    _this.state = {\n      data: []\n    };\n\n    _this.onChange = function (e) {\n      //console.log('onChange: ',e.target.value);\n      _this.onSearch(e.target.value);\n    };\n\n    setTestData();\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        data: storedData\n      });\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      // Reset search\n      if (value === '') {\n        this.setState({\n          data: storedData\n        });\n        return;\n      } // Search with given value\n\n\n      var searchData = [];\n      storedData.forEach(function (element) {\n        // Exact match\n        Object.values(element).forEach(function (val) {\n          if (val.includes(value)) searchData.push(element);\n          console.log(val);\n        }); //console.log('onSearch: ', Object.values(element).includes(value));\n        //if(Object.values(element).includes(value)) searchData.push(element);\n        //if(Object.values(element).indexOf(value) > -1) searchData.push(element);\n      });\n      this.setState({\n        data: searchData\n      });\n    }\n  }, {\n    key: \"getModalUserDetail\",\n    value: function getModalUserDetail(record) {\n      _Modal.info({\n        width: '70%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            margin: '10px 0',\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Registered on: \", record.registerDate), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Roll: \", record.roll), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Getting Explanation\"), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Meta ID: \", record.metaID), React.createElement(_List, {\n          size: \"small\",\n          header: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Topic Created\")),\n          bordered: true,\n          dataSource: listData,\n          renderItem: function renderItem(item) {\n            return React.createElement(_List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(_List, {\n          size: \"small\",\n          header: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"Achievement Created\")),\n          bordered: true,\n          dataSource: listData,\n          renderItem: function renderItem(item) {\n            return React.createElement(_List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            }, item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(_Input.Search, {\n        placeholder: \"Search by Type, Meta ID, Title\",\n        onSearch: function onSearch(value) {\n          return _this2.onSearch(value);\n        },\n        onChange: this.onChange,\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        rowKey: function rowKey(record) {\n          return record.uid;\n        },\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this2.getModalUserDetail(record);\n            }\n          };\n        },\n        columns: columns,\n        dataSource: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport { User };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/User.js"],"names":["React","util","storedData","typeArr","titleArr","rollArr","metaidArr","listData","setTestData","i","push","type","Math","floor","random","title","roll","metaID","registerDate","timeConverter","Date","now","columns","dataIndex","key","sorter","a","b","length","width","filters","text","value","filterMultiple","onFilter","record","indexOf","User","state","data","onChange","e","onSearch","target","setState","searchData","forEach","element","Object","values","val","includes","console","log","info","maskClosable","content","margin","float","item","onOk","marginBottom","uid","index","onClick","getModalUserDetail","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, List } from 'antd';\nimport * as util from '../util';\n\n\n// Test data\nvar storedData = [];\nvar typeArr = ['Personal', 'Institution'];\nvar titleArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar metaidArr = ['0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37702',  \n                 '0x7304f14b0909640acc4f6a192381091eb1f37703', '0x7304f14b0909640acc4f6a192381091eb1f37704',\n                 '0x7304f14b0909640acc4f6a192381091eb1f37705', '0x7304f14b0909640acc4f6a192381091eb1f37706'];\nconst listData = [\n  'Racing car sprays burning fuel into crowd.',\n  'Japanese princess to wed commoner.',\n  'Australian walks 100km after outback crash.',\n  'Man charged over missing wedding girl.',\n  'Los Angeles battles huge wildfires.',\n];\n\nfunction setTestData() {\n  for (var i=0; i < 20; i++) {\n    // Get data (hardcoding)\n    storedData.push({\n      type: typeArr[Math.floor((Math.random() * 10)/9)],\n      title: titleArr[Math.floor(Math.random() * 6)],\n      roll: rollArr[Math.floor((Math.random() * 10)/9)],\n      metaID: metaidArr[Math.floor(Math.random() * 6)],\n      registerDate: util.timeConverter(Date.now()),\n    });\n  }\n}\n\nconst columns = [\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    sorter: (a, b) => a.type.length - b.type.length,\n    width: '10%',\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n    width: '25%',\n  },\n  {\n    title: 'Roll',\n    dataIndex: 'roll',\n    key: 'roll',\n    filters: [\n      { text: 'AA', value: 'Attestation Agency' },\n      { text: 'SP', value: 'Service Provider' },\n    ],\n    width: '20%',\n    filterMultiple: false,\n    onFilter: (value, record) => record.roll.indexOf(value) === 0,\n  },\n  {\n    title: 'Meta ID',\n    dataIndex: 'metaID',\n    key: 'metaID',\n    width: '35%',\n  },\n  {\n    title: 'Registered on',\n    dataIndex: 'registerDate',\n    key: 'registerDate',\n    width: '10%',\n  }\n];\n\nclass User extends React.Component {\n  state = {\n    data: []\n  };\n\n  constructor() {\n    super();\n    setTestData();\n  }\n\n  componentWillMount() {\n    this.setState({data: storedData});\n  }\n\n  onSearch(value) {\n    // Reset search\n    if (value === '') {\n      this.setState({data: storedData});\n      return;\n    }\n\n    // Search with given value\n    var searchData = [];\n    storedData.forEach(function(element) {\n      // Exact match\n      Object.values(element).forEach(function(val) {\n        if(val.includes(value)) searchData.push(element);\n          console.log(val);\n      });\n      //console.log('onSearch: ', Object.values(element).includes(value));\n      //if(Object.values(element).includes(value)) searchData.push(element);\n      //if(Object.values(element).indexOf(value) > -1) searchData.push(element);\n    });\n    this.setState({data: searchData});\n  }\n\n  onChange = (e) => {\n    //console.log('onChange: ',e.target.value);\n    this.onSearch(e.target.value);\n  }\n\n  getModalUserDetail(record) {\n    Modal.info({\n      width: '70%',\n      maskClosable: true,\n      title: record.title,\n      content: (\n        <div>\n          <h5 style={{ margin: '10px 0', float: 'right' }}>Registered on: {record.registerDate}</h5>\n          <h3 style={{ margin: '10px 0' }}>Roll: {record.roll}</h3>\n          <h3 style={{ margin: '10px 0' }}>Getting Explanation</h3>\n          <h3 style={{ margin: '10px 0' }}>Meta ID: {record.metaID}</h3>\n          <List\n            size='small'\n            header={<div><h2>Topic Created</h2></div>}\n            bordered\n            dataSource={listData}\n            renderItem={item => (<List.Item>{item}</List.Item>)}\n          />\n          <br />\n          <List\n            size='small'\n            header={<div><h2>Achievement Created</h2></div>}\n            bordered\n            dataSource={listData}\n            renderItem={item => (<List.Item>{item}</List.Item>)}\n          />\n        </div>\n      ),\n      onOk() {}\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Input.Search\n          placeholder='Search by Type, Meta ID, Title'\n          onSearch={value => this.onSearch(value)}\n          onChange={this.onChange}\n          enterButton\n          style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n        />\n        <br />\n        <Table\n          rowKey={record => record.uid}\n          onRow={(record, index) => ({ onClick: () => this.getModalUserDetail(record) })}\n          columns={columns}\n          dataSource={this.state.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport {User};"]},"metadata":{},"sourceType":"module"}