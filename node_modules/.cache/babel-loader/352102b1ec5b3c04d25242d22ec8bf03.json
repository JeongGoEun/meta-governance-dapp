{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/User.js\";\nimport React from 'react';\nimport * as util from '../util';\nimport { columns } from './columns';\nvar tableColumns = columns.userColumns;\nvar detailColumns = columns.userDetailColumns; // Test data\n\nvar storedData = [];\nvar typeArr = ['Personal', 'Institution'];\nvar titleArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar metaidArr = ['0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37702', '0x7304f14b0909640acc4f6a192381091eb1f37703', '0x7304f14b0909640acc4f6a192381091eb1f37704', '0x7304f14b0909640acc4f6a192381091eb1f37705', '0x7304f14b0909640acc4f6a192381091eb1f37706'];\n\nfunction setTestData() {\n  for (var i = 0; i < 20; i++) {\n    storedData.push({\n      type: typeArr[Math.floor(Math.random() * 10 / 9)],\n      title: titleArr[Math.floor(Math.random() * 6)],\n      roll: rollArr[Math.floor(Math.random() * 10 / 9)],\n      metaID: metaidArr[Math.floor(Math.random() * 6)],\n      registerDate: util.timeConverter(Date.now())\n    });\n  }\n}\n\nvar User =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(User, _React$Component);\n\n  function User() {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this));\n    _this.data = {\n      items: [],\n      originItems: []\n    };\n    _this.state = {\n      items: [],\n      originItems: [],\n      getUserInfo: false,\n      infoModalvisible: false,\n      isSearch: false\n    };\n\n    _this.onSearchInputChange = function (e) {\n      _this.onSearch(e.target.value);\n    };\n\n    setTestData();\n    _this.data.originItems = storedData;\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.data.items = this.data.originItems;\n      this.setState({\n        getUserInfo: true\n      });\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      var searchedData = [];\n      value = value.toString().toLowerCase();\n\n      if (!value) {\n        this.data.items = this.data.originItems;\n        return;\n      }\n\n      this.data.originItems.forEach(function (element) {\n        var columns = Object.values(element);\n\n        for (var i = 0; i < columns.length; i++) {\n          if (columns[i].toString().toLowerCase().includes(value)) {\n            searchedData.push(element);\n            return;\n          }\n        }\n      });\n      this.data.items = searchedData;\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"getModalUserDetail\",\n    value: function getModalUserDetail(record) {\n      _Modal.info({\n        width: '70%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            margin: '10px 0',\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Registered on: \", record.registerDate), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Roll: \", record.roll), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Getting Explanation\"), React.createElement(\"h3\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Meta ID: \", record.metaID), React.createElement(_Table, {\n          rowKey: \"uid\" // columns 맞게 변경하기\n          ,\n          columns: detailColumns,\n          dataSource: this.data.items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(_Input.Search, {\n        enterButton: true,\n        placeholder: \"Search by Type, Meta ID, Title\",\n        onSearch: function onSearch(value) {\n          return _this2.onSearch(value);\n        },\n        onChange: this.onSearchInputChange,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        rowKey: \"uid\",\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this2.getModalUserDetail(record);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport { User };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/User.js"],"names":["React","util","columns","tableColumns","userColumns","detailColumns","userDetailColumns","storedData","typeArr","titleArr","rollArr","metaidArr","setTestData","i","push","type","Math","floor","random","title","roll","metaID","registerDate","timeConverter","Date","now","User","data","items","originItems","state","getUserInfo","infoModalvisible","isSearch","onSearchInputChange","e","onSearch","target","value","setState","searchedData","toString","toLowerCase","forEach","element","Object","values","length","includes","record","info","width","maskClosable","content","margin","float","onOk","marginBottom","index","onClick","getModalUserDetail","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal } from 'antd';\nimport * as util from '../util';\nimport {columns} from './columns'\n\nconst tableColumns = columns.userColumns;\nconst detailColumns = columns.userDetailColumns;\n\n// Test data\nvar storedData = [];\nvar typeArr = ['Personal', 'Institution'];\nvar titleArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar metaidArr = ['0x7304f14b0909640acc4f6a192381091eb1f37701', '0x7304f14b0909640acc4f6a192381091eb1f37702',  \n                 '0x7304f14b0909640acc4f6a192381091eb1f37703', '0x7304f14b0909640acc4f6a192381091eb1f37704',\n                 '0x7304f14b0909640acc4f6a192381091eb1f37705', '0x7304f14b0909640acc4f6a192381091eb1f37706'];\n\nfunction setTestData() {\n  for (var i=0; i < 20; i++) {\n    storedData.push({\n      type: typeArr[Math.floor((Math.random() * 10)/9)],\n      title: titleArr[Math.floor(Math.random() * 6)],\n      roll: rollArr[Math.floor((Math.random() * 10)/9)],\n      metaID: metaidArr[Math.floor(Math.random() * 6)],\n      registerDate: util.timeConverter(Date.now()),\n    });\n  }\n}\n\nclass User extends React.Component {\n  data = {\n    items: [], \n    originItems: [],\n  }\n  \n  state = {\n    items: [],\n    originItems: [],\n    getUserInfo: false,\n    infoModalvisible: false,\n    isSearch: false,\n  };\n\n  constructor() {\n    super();\n    setTestData();\n    this.data.originItems = storedData;\n  }\n\n  componentWillMount() {\n    this.data.items = this.data.originItems;\n    this.setState({ getUserInfo: true });\n  }\n\n  onSearch(value) {\n    let searchedData = [];\n    value = value.toString().toLowerCase();\n\n    if (! value) {\n      this.data.items = this.data.originItems;\n      return;\n    }\n    \n    this.data.originItems.forEach(function(element) {\n      let columns = Object.values(element);\n      for (var i=0; i < columns.length; i++) {\n        if (columns[i].toString().toLowerCase().includes(value)) {\n          searchedData.push(element);\n          return;\n        }\n      }\n    });\n    this.data.items = searchedData;\n    this.setState({ isSearch: true });\n  }\n\n  onSearchInputChange = (e) => {\n    this.onSearch(e.target.value);\n  }\n\n  getModalUserDetail(record) {\n    Modal.info({\n      width: '70%',\n      maskClosable: true,\n      title: record.title,\n      content: (\n        <div>\n          <h5 style={{ margin: '10px 0', float: 'right' }}>Registered on: {record.registerDate}</h5>\n          <h3 style={{ margin: '10px 0' }}>Roll: {record.roll}</h3>\n          <h3 style={{ margin: '10px 0' }}>Getting Explanation</h3>\n          <h3 style={{ margin: '10px 0' }}>Meta ID: {record.metaID}</h3>\n          <Table\n            rowKey=\"uid\"\n            // columns 맞게 변경하기\n            columns={ detailColumns }\n            dataSource={ this.data.items }\n          />\n        </div>\n      ),\n      onOk() {}\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Input.Search\n          enterButton\n          placeholder='Search by Type, Meta ID, Title'\n          onSearch={value => this.onSearch(value)}\n          onChange={this.onSearchInputChange}\n          style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n        />\n        <br />\n        <Table\n          rowKey=\"uid\"\n          onRow={(record, index) => ({ onClick: () => this.getModalUserDetail(record) })}\n          columns={tableColumns}\n          dataSource={this.data.items}\n        />\n      </div>\n    );\n  }\n}\n\nexport {User};"]},"metadata":{},"sourceType":"module"}