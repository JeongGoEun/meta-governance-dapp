{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport * as util from '../util';\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\nvar tableColumns = columns.achievementColumns;\nvar detailTableColumns = columns.achievementdetailTableColumns; // Test data\n\nvar newTopicData = [];\nvar children = [];\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\n\nfunction setTestData() {\n  for (var i = 0; i < topicListArr.length; i++) {\n    children.push(React.createElement(_Select.Option, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, topicListArr[i]));\n  }\n}\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props));\n    _this.data = {\n      items: [],\n      detailItems: [],\n      originItems: [],\n      originClaimTopics: [],\n      newAchievementItems: [],\n      panes: [],\n      activeKey: '0',\n      tabIndex: 1\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      isTabChange: false,\n      isSearch: false,\n      getTopicInfo: false\n    };\n\n    _this.handleAdd = function (result) {\n      var newItem = {};\n      newItem = _this.getKeyValueObject(result);\n      _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n\n      _this.setState({\n        getTopicInfo: true\n      });\n    };\n\n    _this.showModal = function (record, type) {\n      switch (type) {\n        case 'add':\n          _this.setState({\n            addModalVisible: true,\n            qrModalVisible: false\n          });\n\n          break;\n\n        case 'qr':\n          _this.setState({\n            addModalVisible: false,\n            qrModalVisible: true\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleClose = function (e) {\n      _this.setState({\n        addModalVisible: false,\n        qrModalVisible: false\n      });\n    };\n\n    _this.handleSelectChange = function (value) {\n      _this.data.panes[_this.data.activeKey]['title'] = topicListArr[value];\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.data.newAchievementItems[e.target.key] = e.target.value;\n      console.log(_this.data.newAchievementItems);\n    };\n\n    _this.onSearchInputChange = function (e) {\n      _this.onSearch(e.target.value);\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (++_this.data.tabIndex).toString();\n\n      _this.data.panes.push({\n        title: 'New Tab',\n        content: 'Content of new Tab',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var activeKey = _this.data.activeKey;\n      var lastIndex;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      if (lastIndex >= 0 && activeKey === targetKey) {\n        activeKey = panes[lastIndex].key;\n      }\n\n      _this.data['panes'] = panes;\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        isTabChange: true\n      });\n    };\n\n    setTestData();\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.data.items = this.data.originItems;\n      this.data.originClaimTopics = children;\n      this.data.panes.push({\n        title: 'New Tab',\n        content: 'Content of new Tab',\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        isTabChange: true\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.achievementDynamicLoading();\n    }\n  }, {\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // For test\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    _this2.handleAdd(ret);\n                  },\n                  cb: function cb() {\n                    _this2.data.originItems = _this2.data.items;\n                    console.log('getAllAchievements done');\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getClaimTopic\",\n    value: function () {\n      var _getClaimTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(claimTopics) {\n        var _this3 = this;\n\n        var rtn;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                rtn = [];\n                _context2.next = 3;\n                return claimTopics.forEach(function (element) {\n                  var claims = {};\n\n                  _this3.props.contracts.topicRegistry.getTopic(element).then(function (result) {\n                    claims = _this3.getKeyValueObject(result);\n                    claims['id'] = element; //ret를 log로 찍으면 id가 없음 그래서 임의로 넣어줌\n\n                    rtn.push(claims);\n                  });\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", rtn);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getClaimTopic(_x) {\n        return _getClaimTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getKeyValueObject\",\n    value: function getKeyValueObject(result) {\n      var _this4 = this;\n\n      var rtn = [];\n      Object.keys(result).map(function (key) {\n        switch (key) {\n          // case 'title':\n          case 'explanation':\n            {\n              rtn[key] = util.convertHexToString(result[key]);\n            }\n            break;\n\n          case 'claimTopics':\n            {\n              rtn[key] = _this4.getClaimTopic(result[key]);\n            }\n            break;\n\n          case 'reward':\n            {\n              rtn[key] = web3.utils.fromWei(result[key], 'ether') + 'META';\n            }\n            break;\n\n          case 'createdAt':\n            {\n              rtn[key] = util.timeConverter(Date(result[key]));\n            }\n            break;\n\n          default:\n            {\n              if (result[key]) {\n                rtn[key] = result[key];\n              } else {\n                rtn[key] = '';\n              }\n\n              ;\n            }\n            break;\n        }\n      });\n      return rtn;\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      if (!value) {\n        this.data.items = this.data.originItems;\n      } else {\n        var searchedData = [];\n        this.data.originItems.forEach(function (element) {\n          //Exist value\n          Object.values(element).forEach(function (val) {\n            if (val.toLowerCase().includes(value.toLowerCase())) searchedData.push(element);\n          });\n        });\n        this.data.items = searchedData;\n      }\n\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"getModalTopicDetail\",\n    value: function getModalTopicDetail(record, index) {\n      this.data.items[index].claimTopics.then(function (result) {\n        _Modal.info({\n          width: '50%',\n          maskClosable: true,\n          title: record.title,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            style: {\n              float: 'right'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, \"Registered on: \", record.createdAt), React.createElement(\"h3\", {\n            style: {\n              margin: '10px 0 0 0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, \"Address: \", record.id), React.createElement(\"h3\", {\n            style: {\n              margin: '10px 0 0 0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, record.explanation), React.createElement(\"h3\", {\n            style: {\n              margin: '10px 0 0 0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \"Reward: \", record.reward), React.createElement(\"h3\", {\n            style: {\n              margin: '10px 0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \"Creator(Title / MetaID): \", record.title, \" / \", record.metaId), React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            style: {\n              marginTop: '30px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, \"Required Topic\")), React.createElement(_Table, {\n            size: \"small\",\n            rowKey: \"uid\",\n            columns: detailTableColumns,\n            dataSource: result,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          })),\n          onOk: function onOk() {}\n        });\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this5 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, this.state.isTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this5.handleSelectChange,\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, _this5.data.claimTopics), React.createElement(_Input, {\n          onChange: _this5.handleInputChange,\n          placeholder: \"Enter Meta ID of Issuer (Optional)\",\n          id: \"explanation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"getModalAddTopic\",\n    value: function getModalAddTopic() {\n      var _this6 = this;\n\n      return React.createElement(_Modal, {\n        width: \"50%\",\n        title: 'Add New Achievement',\n        visible: this.state.addModalVisible,\n        onOk: function onOk() {\n          return _this6.setState({\n            qrVisible: true\n          });\n        },\n        okText: \"Add\",\n        onCancel: function onCancel() {\n          return _this6.setState({\n            addModalVisible: false,\n            qrVisible: false\n          });\n        },\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"title\",\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        label: \"Reward\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        onChange: this.handleInputChange,\n        id: \"reward\",\n        placeholder: \"Input Reward\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        style: {\n          float: 'right',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"* Reward needs to be higher than 5\"), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"Explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(_Input.TextArea, {\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        autosize: {\n          minRows: 2,\n          maxRows: 6\n        },\n        id: \"explanation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), this.getTopicTabs()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this7.showModal('none', 'add');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: this.onSearchInputChange,\n        onSearch: function onSearch(value) {\n          return _this7.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(_Table, {\n        rowKey: \"uid\",\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this7.getModalTopicDetail(record, index);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), this.getModalAddTopic());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","util","columns","web3","tableColumns","achievementColumns","detailTableColumns","achievementdetailTableColumns","newTopicData","children","topicListArr","setTestData","i","length","push","Achievement","props","data","items","detailItems","originItems","originClaimTopics","newAchievementItems","panes","activeKey","tabIndex","state","addModalVisible","qrVisible","isTabChange","isSearch","getTopicInfo","handleAdd","result","newItem","getKeyValueObject","setState","showModal","record","type","qrModalVisible","handleClose","e","handleSelectChange","value","handleInputChange","target","key","console","log","onSearchInputChange","onSearch","onTabsChange","onTabsEdit","targetKey","action","add","toString","title","content","remove","lastIndex","forEach","pane","filter","closable","achievementDynamicLoading","contracts","achievementManager","getAllAchievements","handler","ret","cb","claimTopics","rtn","element","claims","topicRegistry","getTopic","then","Object","keys","map","convertHexToString","getClaimTopic","utils","fromWei","timeConverter","Date","searchedData","values","val","toLowerCase","includes","index","info","width","maskClosable","float","createdAt","margin","id","explanation","reward","metaId","marginTop","onOk","input","option","indexOf","color","minRows","maxRows","getTopicTabs","marginBottom","onClick","getModalTopicDetail","getModalAddTopic","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, List, Button, Select, Form, Tabs } from 'antd';\nimport * as util from '../util';\nimport { columns } from './columns';\nimport web3 from '../ethereum/web3';\n\nconst tableColumns = columns.achievementColumns;\nconst detailTableColumns = columns.achievementdetailTableColumns;\n\n// Test data\nvar newTopicData = [];\nvar children = [];\nvar topicListArr = ['Legal Name', 'Phone Number', 'E-mail Address', 'Date of Birth', 'Nationality'];\n\nfunction setTestData() {\n  for (var i=0; i < topicListArr.length; i++) {\n      children.push(<Select.Option key={i}>{topicListArr[i]}</Select.Option>);\n  }\n}\n\nclass Achievement extends React.Component {\n  data = {\n    items: [],\n    detailItems: [],\n    originItems: [],\n    originClaimTopics: [],\n    newAchievementItems: [],\n    panes: [],\n    activeKey: '0',\n    tabIndex: 1,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    isTabChange: false,\n    isSearch: false,\n    getTopicInfo: false,\n  }\n\n  constructor(props) {\n    super(props);\n    setTestData();\n  }\n\n  componentWillMount() {\n    this.data.items = this.data.originItems;\n    this.data.originClaimTopics = children;\n    this.data.panes.push({ title: 'New Tab', content: 'Content of new Tab', key: this.data.activeKey , closable: false});\n    this.setState({ isTabChange: true });\n  }\n\n  componentDidMount() {\n    this.achievementDynamicLoading();\n  }\n\n  async achievementDynamicLoading() {\n    // For test\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: (ret) => { this.handleAdd(ret) },\n      cb: () => {this.data.originItems = this.data.items; console.log('getAllAchievements done')}\n    });\n  }\n\n  handleAdd = (result) => {\n    let newItem = {};\n    newItem = this.getKeyValueObject(result);\n    this.data.items = [...this.data.items, newItem];\n    this.setState({ getTopicInfo: true });\n  }\n\n  async getClaimTopic(claimTopics) {\n    let rtn = [];\n    await claimTopics.forEach(element => {\n      let claims = {};\n      this.props.contracts.topicRegistry.getTopic(element).then(result => { \n        claims = this.getKeyValueObject(result);\n        claims['id'] = element; //ret를 log로 찍으면 id가 없음 그래서 임의로 넣어줌\n        rtn.push(claims); \n      }); \n    });    \n    return rtn;\n  }\n\n  getKeyValueObject(result) {\n    var rtn = [];\n    Object.keys(result).map(key => {\n      switch (key) {\n        // case 'title':\n        case 'explanation': { rtn[key] = util.convertHexToString(result[key]); } break;\n        case 'claimTopics': { rtn[key] = this.getClaimTopic(result[key]); } break;\n        case 'reward': { rtn[key] = web3.utils.fromWei(result[key], 'ether') + 'META'; } break;\n        case 'createdAt': { rtn[key] = util.timeConverter(Date(result[key])); } break;\n        default: { if (result[key]) {rtn[key] = result[key]} else {rtn[key] = ''}; } break;\n      }});\n    return rtn;\n  }\n\n  showModal = (record, type) => {\n    switch(type) {\n      case 'add':\n        this.setState({\n          addModalVisible: true,\n          qrModalVisible: false,\n        });\n        break;\n      case 'qr':\n        this.setState({\n          addModalVisible: false,\n          qrModalVisible: true,\n        });\n        break;\n      default: break;\n    }\n  }\n\n  handleClose = (e) => {\n    this.setState({\n      addModalVisible: false,\n      qrModalVisible: false,    \n    });\n  }\n\n  handleSelectChange = (value) => {\n    this.data.panes[this.data.activeKey]['title'] = topicListArr[value];\n    this.setState({ isTabChange: true });\n  }\n\n  handleInputChange = (e) => {\n    this.data.newAchievementItems[e.target.key] = e.target.value;\n    console.log(this.data.newAchievementItems);\n  }\n\n  onSearch(value) {\n    if (! value) {\n      this.data.items = this.data.originItems;\n    } else {\n      var searchedData = [];\n      this.data.originItems.forEach(function(element) {\n        //Exist value\n        Object.values(element).forEach(function(val) {\n          if(val.toLowerCase().includes(value.toLowerCase()))\n          searchedData.push(element);\n        });\n      });\n      this.data.items = searchedData;\n    }\n    this.setState({ isSearch: true });\n  }\n\n  onSearchInputChange = (e) => {\n    this.onSearch(e.target.value);\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  add = () => {\n    this.data.activeKey = (++this.data.tabIndex).toString();\n    this.data.panes.push({ title: 'New Tab', content: 'Content of new Tab', key: this.data.activeKey });\n    this.setState({ isTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let activeKey = this.data.activeKey;\n    let lastIndex;\n    this.data.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) lastIndex = i - 1;\n    });\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.data['panes'] = panes;\n    this.data.activeKey = activeKey;\n    this.setState({ isTabChange: true });\n  }\n\n  getModalTopicDetail(record, index) {\n    this.data.items[index].claimTopics.then(result => {\n      Modal.info({\n        width: '50%',\n        maskClosable: true,\n        title: record.title,\n        content: (\n          <div>\n            <h5 style={{ float: 'right' }}>Registered on: {record.createdAt}</h5>\n            <h3 style={{ margin: '10px 0 0 0' }}>Address: {record.id}</h3>\n            <h3 style={{ margin: '10px 0 0 0' }}>{record.explanation}</h3>\n            <h3 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h3>\n            <h3 style={{ margin: '10px 0' }}>Creator(Title / MetaID): {record.title} / {record.metaId}</h3>\n            <center><h3 style={{ marginTop: '30px' }}>Required Topic</h3></center>\n            <Table size=\"small\" rowKey=\"uid\" columns={ detailTableColumns } dataSource={ result } />\n          </div>\n        ),\n        onOk() {}\n      });      \n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.isTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.handleSelectChange}\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                {this.data.claimTopics}\n              </Select>\n              <Input\n                onChange={this.handleInputChange} \n                placeholder='Enter Meta ID of Issuer (Optional)'\n                id='explanation'\n              />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  getModalAddTopic() {\n    return <Modal\n      width='50%'\n      title={'Add New Achievement'}\n      visible={this.state.addModalVisible}\n      onOk={() => this.setState({ qrVisible: true })}\n      okText='Add'\n      onCancel={() => this.setState({ addModalVisible: false, qrVisible: false })}\n      closable={false}\n      >\n        <Form layout='inline'>\n          <Form.Item label='Title'>\n            <Input\n              onChange={this.handleInputChange}\n              id='title'\n              placeholder='Input Title'/>\n          </Form.Item>\n          <Form.Item label='Reward' style={{ float: 'right'}}>\n            <Input\n              onChange={this.handleInputChange}\n              id='reward'\n              placeholder='Input Reward'\n              addonAfter='META'/>\n          </Form.Item>\n        </Form>\n        <p style={{ float: 'right', color: 'red'}}>* Reward needs to be higher than 5</p>\n        <Form layout='vertical' style={{ margin: '30px 0'}}>\n          <Form.Item label='Explanation'>\n            <Input.TextArea\n              onChange={this.handleInputChange}\n              placeholder='Enter Explanation (max. 32 bytes)'\n              autosize={{ minRows: 2, maxRows: 6 }}\n              id='explanation'/>\n          </Form.Item>\n          {this.getTopicTabs()}\n        </Form>\n    </Modal>\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button \n            type='primary'\n            size='large'\n            onClick={() => this.showModal('none','add')}>Add New Achievement</Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={this.onSearchInputChange}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Table\n          rowKey=\"uid\"\n          onRow={(record, index) => ({ onClick: () => this.getModalTopicDetail(record, index) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.getModalAddTopic()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement};"]},"metadata":{},"sourceType":"module"}