{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Topic.js\";\nimport React from 'react';\nvar structArr = [];\nvar issuerArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar explanationArr = ['0x1111111', '0x1111112', '0x1111113', '0x1111114', '0x1111115', '0x1111116'];\nvar registerdate;\nvar Search = _Input.Search;\nvar ButtonGroup = _Button.Group;\nvar columns = [{\n  title: 'TopicID',\n  dataIndex: 'topicID',\n  key: 'topicID',\n  sorter: function sorter(a, b) {\n    return a.type.length - b.type.length;\n  },\n  width: '10%'\n}, {\n  title: 'Issuer',\n  dataIndex: 'issuer',\n  key: 'issuer',\n  width: '10%'\n}, {\n  title: 'Roll',\n  dataIndex: 'roll',\n  key: 'roll',\n  filters: [{\n    text: 'AA',\n    value: 'Attestation Agency'\n  }, {\n    text: 'SP',\n    value: 'Service Provider'\n  }],\n  width: '15%',\n  filterMultiple: false,\n  onFilter: function onFilter(value, record) {\n    return record.roll.indexOf(value) === 0;\n  }\n}, {\n  title: 'Explanation',\n  dataIndex: 'explanation',\n  key: 'explanation',\n  width: '30%'\n}, {\n  title: 'Registered on',\n  dataIndex: 'registerDate',\n  key: 'registerDate'\n}];\nvar listData = ['Racing car sprays burning fuel into crowd.', 'Japanese princess to wed commoner.', 'Australian walks 100km after outback crash.', 'Man charged over missing wedding girl.', 'Los Angeles battles huge wildfires.'];\n\nvar Topic =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Topic, _React$Component);\n\n  function Topic(props) {\n    var _this;\n\n    _classCallCheck(this, Topic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Topic).call(this, props));\n    _this.state = {\n      data: [],\n      modalVisible: false,\n      topicID: '',\n      issuer: '',\n      explanation: '',\n      registerDate: ''\n    };\n\n    _this.showModal = function (record) {\n      _this.setState({\n        modalVisible: true,\n        type: record.type,\n        title: record.title,\n        roll: record.roll,\n        metaID: record.metaID,\n        registerDate: record.registerDate\n      });\n    };\n\n    _this.handleOk = function (e) {\n      console.log(e);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      console.log(e);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.handleSorting = function (e) {\n      console.log('hanle sorting value: ', e.target.value);\n\n      switch (e.target.value) {\n        case '1':\n          break;\n\n        case '2':\n          break;\n\n        case '3':\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Topic, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.initialize();\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var i;\n\n      for (i = 0; i < 20; i++) {\n        //Get data (hardcoding)\n        structArr.push({\n          topicID: Math.floor(Math.random() * 2000),\n          issuer: issuerArr[Math.floor(Math.random() * 6)],\n          roll: rollArr[Math.floor(Math.random() * 10 / 9)],\n          explanation: explanationArr[Math.floor(Math.random() * 6)],\n          registerDate: Date.now() - Math.floor(Math.random() * 10)\n        });\n      }\n\n      this.setState({\n        data: structArr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Add New Topic\"), React.createElement(Search, {\n        placeholder: \"Search by Type, Meta ID, Title\",\n        onSearch: function onSearch(value) {\n          return _this2.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: 500,\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(_Radio.Group, {\n        style: {\n          margin: '10px 10px 0 0'\n        },\n        onChange: this.handleSorting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(_Radio.Button, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"All\"), React.createElement(_Radio.Button, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Pre-fixed\"), React.createElement(_Radio.Button, {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Added\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.modalVisible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        style: {\n          margin: '10px 0',\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Registered on: \", this.state.registerDate), React.createElement(\"h3\", {\n        style: {\n          margin: '10px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Roll: \", this.state.roll), React.createElement(\"h3\", {\n        style: {\n          margin: '10px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Getting Explanation\"), React.createElement(\"h3\", {\n        style: {\n          margin: '10px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Meta ID: \", this.state.metaID), React.createElement(_List, {\n        size: \"small\",\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"Topic Created\")),\n        bordered: true,\n        dataSource: listData,\n        renderItem: function renderItem(item) {\n          return React.createElement(_List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(_List, {\n        size: \"small\",\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Acheivement Created\")),\n        bordered: true,\n        dataSource: listData,\n        renderItem: function renderItem(item) {\n          return React.createElement(_List.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        rowKey: function rowKey(record) {\n          return record.uid;\n        },\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              console.log('onRow', record);\n\n              _this2.showModal(record);\n            }\n          };\n        },\n        columns: columns,\n        dataSource: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Topic;\n}(React.Component);\n\nexport { Topic };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Topic.js"],"names":["React","structArr","issuerArr","rollArr","explanationArr","registerdate","Search","ButtonGroup","Group","columns","title","dataIndex","key","sorter","a","b","type","length","width","filters","text","value","filterMultiple","onFilter","record","roll","indexOf","listData","Topic","props","state","data","modalVisible","topicID","issuer","explanation","registerDate","showModal","setState","metaID","handleOk","e","console","log","handleCancel","handleSorting","target","initialize","i","push","Math","floor","random","Date","now","onSearch","float","marginBottom","margin","item","uid","index","onClick","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, List, Button, Radio } from 'antd';\n\nvar structArr = [];\nvar issuerArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\nvar rollArr = ['Attestation Agency', 'Service Provider'];\nvar explanationArr = ['0x1111111', '0x1111112','0x1111113','0x1111114', '0x1111115','0x1111116'];\nvar registerdate;\n\nconst Search = Input.Search;\nconst ButtonGroup = Button.Group;\n\nconst columns = [{\n  title: 'TopicID',\n  dataIndex: 'topicID',\n  key: 'topicID',\n  sorter: (a, b) => a.type.length - b.type.length,\n  width: '10%',\n  }, {\n  title: 'Issuer',\n  dataIndex: 'issuer',\n  key: 'issuer',\n  width: '10%',\n  }, {\n  title: 'Roll',\n  dataIndex: 'roll',\n  key: 'roll',\n  filters: [\n    { text: 'AA', value: 'Attestation Agency' },\n    { text: 'SP', value: 'Service Provider' },\n  ],\n  width: '15%',\n  filterMultiple: false,\n  onFilter: (value, record) => record.roll.indexOf(value) === 0,\n  }, {\n  title: 'Explanation',\n  dataIndex: 'explanation',\n  key: 'explanation',\n  width: '30%',\n  }, {\n  title: 'Registered on',\n  dataIndex: 'registerDate',\n  key: 'registerDate',\n  }];\n\n  const listData = [\n    'Racing car sprays burning fuel into crowd.',\n    'Japanese princess to wed commoner.',\n    'Australian walks 100km after outback crash.',\n    'Man charged over missing wedding girl.',\n    'Los Angeles battles huge wildfires.',\n  ];\n\n  class Topic extends React.Component {\n  state = {\n    data: [],\n    modalVisible: false,\n    topicID: '',\n    issuer: '',\n    explanation: '',\n    registerDate: '',\n  }\n  \n  constructor(props) {\n    super(props);\n  }\n\n  showModal = (record) => {\n    this.setState({\n      modalVisible: true,\n      type: record.type,\n      title: record.title,\n      roll: record.roll,\n      metaID: record.metaID,\n      registerDate: record.registerDate,\n    });\n  }\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      modalVisible: false,\n    });\n  }\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      modalVisible: false,\n    });\n  }\n\n  componentWillMount() {\n    this.initialize();\n  }\n\n  initialize() {\n    var i;\n    for(i=0; i<20; i++) {\n      //Get data (hardcoding)\n      structArr.push({\n        topicID: Math.floor((Math.random() * 2000)),\n        issuer: issuerArr[Math.floor(Math.random() * 6)],\n        roll: rollArr[Math.floor((Math.random() * 10)/9)],\n        explanation: explanationArr[Math.floor(Math.random() * 6)],\n        registerDate: Date.now() - Math.floor((Math.random()*10)),\n      });\n    }\n    this.setState({data: structArr});\n  }\n\n  handleSorting = (e) => {\n    console.log('hanle sorting value: ',e.target.value);\n\n    switch(e.target.value) {\n      case '1' :\n      \n      break;\n      case '2' :\n      break;\n      case '3' :\n      break;\n      default :\n      break;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n        <Button type=\"primary\" size='large'>Add New Topic</Button>\n        <Search\n          placeholder=\"Search by Type, Meta ID, Title\"\n          onSearch={value => this.onSearch(value)}\n          enterButton\n          style={{ width: 500, float: 'right', marginBottom: '20px' }}\n        />\n        </div>\n        <Radio.Group style={{margin: '10px 10px 0 0'}} onChange={this.handleSorting}>\n          <Radio.Button value='1'>All</Radio.Button>\n          <Radio.Button value='2'>Pre-fixed</Radio.Button>\n          <Radio.Button value='3'>Added</Radio.Button>\n        </Radio.Group>\n        <br />\n        <Modal\n          title={this.state.title}\n          visible={this.state.modalVisible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}>\n          <div>\n            <h5 style={{ margin: '10px 0', float: 'right' }}>Registered on: {this.state.registerDate}</h5>\n             <h3 style={{ margin: '10px 0' }}>Roll: {this.state.roll}</h3>\n            <h3 style={{ margin: '10px 0' }}>Getting Explanation</h3>\n            <h3 style={{ margin: '10px 0' }}>Meta ID: {this.state.metaID}</h3>\n            <List\n              size=\"small\"\n              header={<div><h2>Topic Created</h2></div>}\n              bordered\n              dataSource={listData}\n              renderItem={item => (<List.Item>{item}</List.Item>)}\n            />\n            <br />\n            <List\n              size=\"small\"\n              header={<div><h2>Acheivement Created</h2></div>}\n              bordered\n              dataSource={listData}\n              renderItem={item => (<List.Item>{item}</List.Item>)}\n            />\n          </div>\n        </Modal>\n        <br />\n        <Table\n          rowKey={record => record.uid}\n          onRow={(record, index) => ({\n            onClick: () => { console.log('onRow', record); this.showModal(record); } \n          })}\n          columns={columns}\n          dataSource={this.state.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport {Topic};"]},"metadata":{},"sourceType":"module"}