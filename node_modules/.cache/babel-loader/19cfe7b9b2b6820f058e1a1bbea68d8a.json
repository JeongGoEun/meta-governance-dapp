{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport web3 from '../web3';\nimport web3config from '../web3-config.json';\nimport { getAddresses } from './addresses';\nimport { getBranch, getABI } from './helpers';\nimport { sleep } from '../../util';\n\nvar _ = require('underscore');\n\nvar TopicRegistry =\n/*#__PURE__*/\nfunction () {\n  function TopicRegistry() {\n    _classCallCheck(this, TopicRegistry);\n  }\n\n  _createClass(TopicRegistry, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _getAddresses, TOPIC_REGISTRY_ADDRESS, branch, topicRegistryAbi;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _getAddresses = getAddresses(web3config.netid), TOPIC_REGISTRY_ADDRESS = _getAddresses.TOPIC_REGISTRY_ADDRESS;\n                branch = getBranch(web3config.netid);\n                _context.next = 4;\n                return getABI(branch, 'TopicRegistry');\n\n              case 4:\n                topicRegistryAbi = _context.sent;\n                this.topicRegistryInstance = new web3.eth.Contract(topicRegistryAbi.abi, TOPIC_REGISTRY_ADDRESS);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function init() {\n        return _init.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTopic\",\n    value: function () {\n      var _getTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(topicID) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.topicRegistryInstance.methods.topics) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                return _context2.abrupt(\"return\", this.topicRegistryInstance.methods.topics(topicID).call());\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getTopic(_x) {\n        return _getTopic.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"test\",\n    value: function () {\n      var _test = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return sleep(id * 1000);\n\n              case 2:\n                return _context3.abrupt(\"return\", {\n                  id: id,\n                  issuer: '0xA408FCD6B7f3847686Cb5f41e52A7f4E084FD3cc',\n                  explanation: Buffer.from('explanation')\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function test(_x2) {\n        return _test.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAllTopic\",\n    value: function () {\n      var _getAllTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(_ref) {\n        var _this = this;\n\n        var handler, cb;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                handler = _ref.handler, cb = _ref.cb;\n\n                if (!(!handler || !cb)) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 3:\n                Promise.all(_.range(20).map(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee4(id) {\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return _this.test(id).then(function (id) {\n                              return handler(id);\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, this);\n                  }));\n\n                  return function (_x4) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }())).then(function () {\n                  return cb();\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getAllTopic(_x3) {\n        return _getAllTopic.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return TopicRegistry;\n}();\n\nexport { TopicRegistry };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/ethereum/contracts/TopicRegistry.contract.js"],"names":["web3","web3config","getAddresses","getBranch","getABI","sleep","_","require","TopicRegistry","netid","TOPIC_REGISTRY_ADDRESS","branch","topicRegistryAbi","topicRegistryInstance","eth","Contract","abi","topicID","methods","topics","call","id","issuer","explanation","Buffer","from","handler","cb","Promise","all","range","map","test","then"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,WAAlC;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;IAEMC,a;;;;;;;;;;;;;;;;;;;gCAEiCN,YAAY,CAACD,UAAU,CAACQ,KAAZ,C,EAAvCC,sB,iBAAAA,sB;AACFC,gBAAAA,M,GAASR,SAAS,CAACF,UAAU,CAACQ,KAAZ,C;;uBAEOL,MAAM,CAACO,MAAD,EAAS,eAAT,C;;;AAA/BC,gBAAAA,gB;AACN,qBAAKC,qBAAL,GAA6B,IAAIb,IAAI,CAACc,GAAL,CAASC,QAAb,CAAsBH,gBAAgB,CAACI,GAAvC,EAA4CN,sBAA5C,CAA7B;;;;;;;;;;;;;;;;;;;iDAGaO,O;;;;;oBAEP,KAAKJ,qBAAL,CAA2BK,OAA3B,CAAmCC,M;;;;;;;;kDAGlC,KAAKN,qBAAL,CAA2BK,OAA3B,CAAmCC,MAAnC,CAA0CF,OAA1C,EAAmDG,IAAnD,E;;;;;;;;;;;;;;;;;;;iDAGEC,E;;;;;;uBACHhB,KAAK,CAACgB,EAAE,GAAC,IAAJ,C;;;kDACJ;AACLA,kBAAAA,EAAE,EAAEA,EADC;AAELC,kBAAAA,MAAM,EAAE,4CAFH;AAGLC,kBAAAA,WAAW,EAAEC,MAAM,CAACC,IAAP,CAAY,aAAZ;AAHR,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOUC,gBAAAA,O,QAAAA,O,EAASC,E,QAAAA,E;;sBACtB,CAAED,OAAF,IAAa,CAAEC,E;;;;;;;;AAEnBC,gBAAAA,OAAO,CAACC,GAAR,CAAYvB,CAAC,CAACwB,KAAF,CAAQ,EAAR,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAgB,kBAAOV,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACpB,KAAI,CAACW,IAAL,CAAUX,EAAV,EAAcY,IAAd,CAAmB,UAAAZ,EAAE;AAAA,qCAAIK,OAAO,CAACL,EAAD,CAAX;AAAA,6BAArB,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhB;;AAAA;AAAA;AAAA;AAAA,oBAAZ,EAEIY,IAFJ,CAES;AAAA,yBAAMN,EAAE,EAAR;AAAA,iBAFT;;;;;;;;;;;;;;;;;;;AAMJ,SAAQnB,aAAR","sourcesContent":["import web3 from '../web3';\nimport web3config from '../web3-config.json';\nimport { getAddresses } from './addresses';\nimport { getBranch, getABI } from './helpers';\nimport { sleep } from '../../util';\n\nvar _ = require('underscore');\n\nclass TopicRegistry {\n  async init() {\n    const { TOPIC_REGISTRY_ADDRESS } = getAddresses(web3config.netid);\n    const branch = getBranch(web3config.netid);\n\n    const topicRegistryAbi = await getABI(branch, 'TopicRegistry');\n    this.topicRegistryInstance = new web3.eth.Contract(topicRegistryAbi.abi, TOPIC_REGISTRY_ADDRESS);\n  }\n\n  async getTopic(topicID) {\n    // Validate ABI\n    if (! this.topicRegistryInstance.methods.topics) return;\n\n    // Call\n    return this.topicRegistryInstance.methods.topics(topicID).call();\n  }\n\n  async test(id) {\n    await sleep(id*1000);\n    return {\n      id: id,\n      issuer: '0xA408FCD6B7f3847686Cb5f41e52A7f4E084FD3cc',\n      explanation: Buffer.from('explanation')\n    };\n  }\n\n  async getAllTopic({handler, cb}) {\n    if (! handler || ! cb) return;\n    \n    Promise.all(_.range(20).map(async (id) => {\n      await this.test(id).then(id => handler(id));\n    })).then(() => cb());\n  }\n}\n\nexport {TopicRegistry}"]},"metadata":{},"sourceType":"module"}