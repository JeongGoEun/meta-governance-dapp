{"ast":null,"code":"import \"antd/es/progress/style\";\nimport _Progress from \"antd/es/progress\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js\";\nimport React from 'react';\nimport { SendTransaction } from 'metasdk-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport web3 from '../ethereum/web3';\nimport { columns } from './columns';\nimport * as util from '../util';\nvar tableColumns = columns.achievementColumns;\nvar detailColumns = columns.achievementDetailColumns;\n\nvar Achievement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Achievement, _React$Component);\n\n  function Achievement(props) {\n    var _this;\n\n    _classCallCheck(this, Achievement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Achievement).call(this, props));\n    _this.data = {\n      items: [],\n      localStorageItem: [],\n      originItems: [],\n      users: [],\n      topics: [],\n      originClaimTopics: [],\n      initNewAchievementItem: {\n        title: '',\n        explanation: '',\n        reward: '',\n        topics: [{\n          title: '',\n          id: -1,\n          issuer: '',\n          key: '0'\n        }]\n      },\n      inputValidData: [],\n      topicIssuerMap: [],\n      panes: [],\n      activeKey: '0',\n      tabIndex: 1,\n      loadedAchieveCnt: 0,\n      totalAchieveCnt: 1\n    };\n    _this.state = {\n      addModalVisible: false,\n      qrVisible: false,\n      didTabChange: false,\n      didSearch: false,\n      loading: false,\n      getTopicInfo: false,\n      getAchievementInfo: false\n    };\n\n    _this.addAchievement =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ret) {\n        var newItem, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ++_this.data.loadedAchieveCnt;\n\n                if (ret) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return _this.getAchievementFromMap(ret);\n\n              case 5:\n                newItem = _context.sent;\n                user = _this.data.users.filter(function (m) {\n                  return m.addr === ret.creator;\n                });\n                if (user) ret.creatorTitle = user[0].title;else ret.creatorTitle = ret.creator;\n                _this.data.items = _toConsumableArray(_this.data.items).concat([newItem]);\n                _this.data.originItems = _this.data.items;\n\n                _this.setState({\n                  getAchievementInfo: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.updateNewAchieveInfo = function (e) {\n      var valid = util.validate(e.target.id, e.target.value);\n      if (valid.b) e.target.style.borderColor = '#3db389';else e.target.style.borderColor = 'red';\n\n      switch (e.target.id) {\n        case 'title':\n        case 'explanation':\n          if (!valid.b && e.target.value) e.target.value = _this.data.inputValidData[e.target.id];\n          _this.data.inputValidData[e.target.id] = e.target.value;\n          _this.data.newAchievementItem[e.target.id] = e.target.value;\n          break;\n\n        case 'reward':\n          if (valid.b) _this.data.newAchievementItem[e.target.id] = e.target.value;\n          break;\n\n        case 'issuer':\n          if (!valid.b) break;\n\n          _this.data.panes.forEach(function (element, i) {\n            if (element.key === _this.data.activeKey) _this.data.newAchievementItem.topics[i].issuer = e.target.value;\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.onTabsChange = function (activeKey) {\n      _this.data.activeKey = activeKey;\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.onTabsEdit = function (targetKey, action) {\n      _this[action](targetKey);\n    };\n\n    _this.add = function () {\n      _this.data.activeKey = (_this.data.tabIndex++).toString();\n\n      _this.data.panes.push({\n        title: 'New Topic',\n        content: 'Content of new tab',\n        key: _this.data.activeKey\n      });\n\n      _this.data.newAchievementItem.topics.push({\n        title: '',\n        id: -1,\n        issuer: '',\n        key: _this.data.activeKey\n      });\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.remove = function (targetKey) {\n      var lastIndex = 0;\n\n      _this.data.panes.forEach(function (pane, i) {\n        if (pane.key === targetKey) lastIndex = i - 1;\n      });\n\n      var newTopicItems = _this.data.newAchievementItem.topics.filter(function (element) {\n        return element.key !== targetKey;\n      });\n\n      var panes = _this.data.panes.filter(function (pane) {\n        return pane.key !== targetKey;\n      });\n\n      _this.data.newAchievementItem.topics = newTopicItems;\n      _this.data.activeKey = panes[lastIndex].key;\n      _this.data.panes = panes;\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.onTopicClick = function (value) {\n      // eslint-disable-next-line\n      var selected = _this.data.topics.filter(function (val) {\n        return val.id == value;\n      })[0];\n\n      if (_this.data.panes.filter(function (element) {\n        return element.title === selected.title;\n      }).length > 0) {\n        return _message.error('Duplicated topic.');\n      }\n\n      _this.data.panes.forEach(function (element, i) {\n        if (element.key === _this.data.activeKey) {\n          _this.data.panes[i].title = selected.title;\n          _this.data.newAchievementItem.topics[i].title = selected.title;\n          _this.data.newAchievementItem.topics[i].id = selected.id;\n        }\n      });\n\n      _this.setState({\n        didTabChange: true\n      });\n    };\n\n    _this.onAddClick = function () {\n      console.log(_this.data.newAchievementItem);\n      var formCheck = true;\n      Object.keys(_this.data.newAchievementItem).map(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(key) {\n          var valid;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  valid = util.validate(key, _this.data.newAchievementItem[key]);\n\n                  if (!valid.b) {\n                    _message.error(valid.err);\n\n                    formCheck = false;\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      if (!formCheck) return;\n\n      _this.setState({\n        qrVisible: true\n      }, function () {\n        return _this.data.newAchievementItem = JSON.parse(JSON.stringify(_this.data.initNewAchievementItem));\n      });\n    };\n\n    _this.data.newAchievementItem = JSON.parse(JSON.stringify(_this.data.initNewAchievementItem));\n    return _this;\n  }\n\n  _createClass(Achievement, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (this.data.users.length > 0 || this.data.topics.length > 0) return;\n      var users = util.getUsersFromLocal();\n      var topics = util.getTopicsFromLocal();\n      if (users) this.data.users = users;else this.props.contracts.aaRegistry.getAllAttestationAgencies({\n        handler: function handler(ret) {\n          if (ret) _this2.data.users = _toConsumableArray(_this2.data.users).concat([util.refine(ret)]);\n        },\n        cb: function cb() {\n          return util.setUsersToLocal(_this2.data.users);\n        }\n      });\n\n      if (topics) {\n        this.data.topics = topics;\n        this.data.originClaimTopics = topics.map(function (val) {\n          return React.createElement(_Select.Option, {\n            key: val.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, val.title, \":\", val.explanation);\n        });\n        this.setState({\n          getTopicInfo: true\n        }, function () {\n          return _this2.achievementDynamicLoading();\n        });\n      } else this.props.contracts.topicRegistry.getAllTopic({\n        handler: function handler(ret) {\n          if (ret) _this2.data.topics = _toConsumableArray(_this2.data.topics).concat([util.refine(ret)]);\n        },\n        cb: function cb() {\n          _this2.data.topics.sort(function (a, b) {\n            if (a.id > b.id) return 1;else if (a.id < b.id) return -1;\n            return 0;\n          });\n\n          util.setTopicsToLocal(_this2.data.topics);\n          _this2.data.originClaimTopics = _this2.data.topics.map(function (val) {\n            return React.createElement(_Select.Option, {\n              key: val.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, val.title, \":\", val.explanation);\n          });\n\n          _this2.setState({\n            getTopicInfo: true\n          }, function () {\n            return _this2.achievementDynamicLoading();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"achievementDynamicLoading\",\n    value: function () {\n      var _achievementDynamicLoading = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.props.contracts.achievementManager.getLengthOfAchievements();\n\n              case 2:\n                this.data.totalAchieveCnt = _context3.sent;\n                this.props.contracts.achievementManager.getAllAchievements({\n                  handler: function handler(ret) {\n                    return _this3.addAchievement(ret);\n                  },\n                  cb: function cb() {\n                    _this3.data.loadedAchieveCnt = _this3.data.totalAchieveCnt;\n                    util.setAchievementsToLocal(_this3.data.originItems);\n\n                    _this3.setState({\n                      loading: true\n                    });\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function achievementDynamicLoading() {\n        return _achievementDynamicLoading.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Init tab value\n      this.data.panes.push({\n        title: 'New Topic',\n        content: '',\n        topics: [],\n        key: this.data.activeKey,\n        closable: false\n      });\n      this.setState({\n        didTabChange: true\n      });\n    }\n  }, {\n    key: \"getAchievementFromMap\",\n    value: function () {\n      var _getAchievementFromMap = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(m) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                util.refine(m);\n                if (m.claimTopics) m.claimTopics = this.data.topics.filter(function (val) {\n                  return m.claimTopics.includes(val.id.toString());\n                });\n                return _context4.abrupt(\"return\", m);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getAchievementFromMap(_x3) {\n        return _getAchievementFromMap.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(value) {\n      var regex = new RegExp(value, 'i');\n      if (!value) this.data.items = this.data.originItems;else this.data.items = this.data.originItems.filter(function (element) {\n        return Object.values(element).filter(function (val) {\n          return val.toString().match(regex);\n        }).length > 0;\n      });\n      this.setState({\n        didSearch: true\n      });\n    }\n  }, {\n    key: \"getModalAchievementDetail\",\n    value: function getModalAchievementDetail(record, index) {\n      _Modal.info({\n        width: '50%',\n        maskClosable: true,\n        title: record.title,\n        content: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            marginBottom: '10px',\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Registered on: \", record.createdAt), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"ID: \", record.id), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Explanation: \", record.explanation), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          style: {\n            margin: '10px 0 0 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"Reward: \", record.reward), \" \", React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          style: {\n            margin: '10px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Creator: \", record.creatorTitle, \" / \", record.creator, \"\\xA0\\xA0\", React.createElement(CopyToClipboard, {\n          text: record.creator,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(_Button, {\n          onClick: function onClick() {\n            return _message.info('Copied !!');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"copy\"))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Required Topics\")), React.createElement(_Table, {\n          size: \"small\",\n          rowKey: \"id\",\n          columns: detailColumns,\n          dataSource: record.claimTopics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        })),\n        onOk: function onOk() {}\n      });\n    }\n  }, {\n    key: \"getTopicTabs\",\n    value: function getTopicTabs() {\n      var _this4 = this;\n\n      return React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(_Tabs, {\n        onChange: this.onTabsChange,\n        activeKey: this.data.activeKey,\n        type: \"editable-card\",\n        onEdit: this.onTabsEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.didTabChange && this.data.panes.map(function (pane) {\n        return React.createElement(_Tabs.TabPane, {\n          tab: pane.title,\n          key: pane.key,\n          closable: pane.closable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(_Select, {\n          showSearch: true,\n          style: {\n            width: '100%'\n          },\n          placeholder: \"Select a Topic\",\n          optionFilterProp: \"children\",\n          onChange: _this4.onTopicClick,\n          filterOption: function filterOption(input, option) {\n            // eslint-disable-next-line\n            var selected = _this4.data.topics.filter(function (m) {\n              return m.id == option.key;\n            });\n\n            if (!selected || !util.cmpIgnoreCase(selected[0].title + selected[0].explanation, input)) return false;\n            return true;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, _this4.data.originClaimTopics), React.createElement(_Input, {\n          id: \"issuer\",\n          onChange: _this4.updateNewAchieveInfo,\n          placeholder: \"Enter Meta ID of Issuer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }));\n      })));\n    }\n  }, {\n    key: \"moveToFAQ\",\n    value: function moveToFAQ() {\n      this.setState({\n        addModalVisible: false\n      });\n      this.props.moveToFAQ();\n    }\n  }, {\n    key: \"getModalAddAchievement\",\n    value: function getModalAddAchievement() {\n      var _this5 = this;\n\n      return React.createElement(_Modal, {\n        width: \"40%\",\n        title: \"Add New Achievement\",\n        visible: this.state.addModalVisible,\n        onOk: this.onAddClick,\n        okText: \"Add\",\n        onCancel: function onCancel() {\n          return _this5.setState({\n            addModalVisible: false,\n            qrVisible: false\n          });\n        },\n        closable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.state.qrVisible ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Scan QR Code to Add New Achievement\"), React.createElement(SendTransaction, {\n        id: \"sendTransaction\",\n        request: this.props.contracts.achievementManager.createAchievement(this.data.newAchievementItem.topics.map(function (val) {\n          return val.id;\n        }), this.data.newAchievementItem.topics.map(function (val) {\n          return val.issuer;\n        }), Buffer.from(this.data.newAchievementItem.title), Buffer.from(this.data.newAchievementItem.explanation), web3.utils.toWei(this.data.newAchievementItem.reward.toString(), 'ether'), 'uri'),\n        usage: \"createAchievement\",\n        service: \"metagate\",\n        callbackUrl: \"none\",\n        qrsize: 256,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          marginTop: '6%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Title: \", this.data.newAchievementItem.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Reward: \", this.data.newAchievementItem.reward, \" META\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Title\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        id: \"title\",\n        onChange: this.updateNewAchieveInfo,\n        placeholder: \"Input Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(_Col, {\n        span: 11,\n        offset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Reward\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        id: \"reward\",\n        type: \"number\",\n        onChange: this.updateNewAchieveInfo,\n        placeholder: \"Input META Amount. Reward needs to be higher than 5\",\n        addonAfter: \"META\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          margin: '30px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Explanation\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        id: \"explanation\",\n        onChange: this.updateNewAchieveInfo,\n        placeholder: \"Enter Explanation (max. 32 bytes)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), \"Required Claim Topics\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), this.getTopicTabs()), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this5.moveToFAQ();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"FAQ\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: function onClick() {\n          return _this6.setState({\n            addModalVisible: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Add New Achievement\"), React.createElement(_Input.Search, {\n        placeholder: \"Search by Creator, No., Keyword\",\n        onChange: function onChange(e) {\n          return _this6.onSearch(e.target.value);\n        },\n        onSearch: function onSearch(value) {\n          return _this6.onSearch(value);\n        },\n        enterButton: true,\n        style: {\n          width: '50%',\n          float: 'right',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })), React.createElement(_Progress, {\n        type: \"line\",\n        percent: +Number(this.data.loadedAchieveCnt / this.data.totalAchieveCnt * 100).toFixed(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        rowKey: function rowKey(record) {\n          return record.id;\n        },\n        onRow: function onRow(record, index) {\n          return {\n            onClick: function onClick() {\n              return _this6.getModalAchievementDetail(record, index);\n            }\n          };\n        },\n        columns: tableColumns,\n        dataSource: this.data.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), this.state.getTopicInfo && this.getModalAddAchievement());\n    }\n  }]);\n\n  return Achievement;\n}(React.Component);\n\nexport { Achievement };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/components/Achievement.js"],"names":["React","SendTransaction","CopyToClipboard","web3","columns","util","tableColumns","achievementColumns","detailColumns","achievementDetailColumns","Achievement","props","data","items","localStorageItem","originItems","users","topics","originClaimTopics","initNewAchievementItem","title","explanation","reward","id","issuer","key","inputValidData","topicIssuerMap","panes","activeKey","tabIndex","loadedAchieveCnt","totalAchieveCnt","state","addModalVisible","qrVisible","didTabChange","didSearch","loading","getTopicInfo","getAchievementInfo","addAchievement","ret","getAchievementFromMap","newItem","user","filter","m","addr","creator","creatorTitle","setState","updateNewAchieveInfo","e","valid","validate","target","value","b","style","borderColor","newAchievementItem","forEach","element","i","onTabsChange","onTabsEdit","targetKey","action","add","toString","push","content","remove","lastIndex","pane","newTopicItems","onTopicClick","selected","val","length","error","onAddClick","console","log","formCheck","Object","keys","map","err","JSON","parse","stringify","getUsersFromLocal","getTopicsFromLocal","contracts","aaRegistry","getAllAttestationAgencies","handler","refine","cb","setUsersToLocal","achievementDynamicLoading","topicRegistry","getAllTopic","sort","a","setTopicsToLocal","achievementManager","getLengthOfAchievements","getAllAchievements","setAchievementsToLocal","closable","claimTopics","includes","regex","RegExp","values","match","record","index","info","width","maskClosable","marginBottom","float","createdAt","margin","marginTop","onOk","input","option","cmpIgnoreCase","moveToFAQ","createAchievement","Buffer","from","utils","toWei","getTopicTabs","onSearch","Number","toFixed","onClick","getModalAchievementDetail","getModalAddAchievement","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AAEA,IAAMC,YAAY,GAAGF,OAAO,CAACG,kBAA7B;AACA,IAAMC,aAAa,GAAGJ,OAAO,CAACK,wBAA9B;;IAEMC,W;;;;;AA6BJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AADiB,UA3BnBC,IA2BmB,GA3BZ;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,gBAAgB,EAAE,EAFb;AAGLC,MAAAA,WAAW,EAAE,EAHR;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,MAAM,EAAE,EALH;AAMLC,MAAAA,iBAAiB,EAAE,EANd;AAOLC,MAAAA,sBAAsB,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,WAAW,EAAE,EAA1B;AAA8BC,QAAAA,MAAM,EAAE,EAAtC;AAA0CL,QAAAA,MAAM,EAAE,CAAC;AAAEG,UAAAA,KAAK,EAAE,EAAT;AAAaG,UAAAA,EAAE,EAAE,CAAC,CAAlB;AAAqBC,UAAAA,MAAM,EAAE,EAA7B;AAAiCC,UAAAA,GAAG,EAAE;AAAtC,SAAD;AAAlD,OAPnB;AAQLC,MAAAA,cAAc,EAAE,EARX;AASLC,MAAAA,cAAc,EAAE,EATX;AAULC,MAAAA,KAAK,EAAE,EAVF;AAWLC,MAAAA,SAAS,EAAE,GAXN;AAYLC,MAAAA,QAAQ,EAAE,CAZL;AAaLC,MAAAA,gBAAgB,EAAE,CAbb;AAcLC,MAAAA,eAAe,EAAE;AAdZ,KA2BY;AAAA,UAVnBC,KAUmB,GAVX;AACNC,MAAAA,eAAe,EAAE,KADX;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,SAAS,EAAE,KAJL;AAKNC,MAAAA,OAAO,EAAE,KALH;AAMNC,MAAAA,YAAY,EAAE,KANR;AAONC,MAAAA,kBAAkB,EAAE;AAPd,KAUW;;AAAA,UAsDnBC,cAtDmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAsDF,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,kBAAE,MAAK9B,IAAL,CAAUmB,gBAAZ;;AADe,oBAETW,GAFS;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAGK,MAAKC,qBAAL,CAA2BD,GAA3B,CAHL;;AAAA;AAGXE,gBAAAA,OAHW;AAIXC,gBAAAA,IAJW,GAIJ,MAAKjC,IAAL,CAAUI,KAAV,CAAgB8B,MAAhB,CAAuB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,IAAF,KAAWN,GAAG,CAACO,OAAnB;AAAA,iBAAxB,CAJI;AAKf,oBAAIJ,IAAJ,EAAUH,GAAG,CAACQ,YAAJ,GAAmBL,IAAI,CAAC,CAAD,CAAJ,CAAQzB,KAA3B,CAAV,KACKsB,GAAG,CAACQ,YAAJ,GAAmBR,GAAG,CAACO,OAAvB;AACL,sBAAKrC,IAAL,CAAUC,KAAV,sBAAsB,MAAKD,IAAL,CAAUC,KAAhC,UAAuC+B,OAAvC;AACA,sBAAKhC,IAAL,CAAUG,WAAV,GAAwB,MAAKH,IAAL,CAAUC,KAAlC;;AACA,sBAAKsC,QAAL,CAAc;AAAEX,kBAAAA,kBAAkB,EAAE;AAAtB,iBAAd;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtDE;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAwEnBY,oBAxEmB,GAwEI,UAACC,CAAD,EAAO;AAC5B,UAAIC,KAAK,GAAGjD,IAAI,CAACkD,QAAL,CAAcF,CAAC,CAACG,MAAF,CAASjC,EAAvB,EAA2B8B,CAAC,CAACG,MAAF,CAASC,KAApC,CAAZ;AACA,UAAIH,KAAK,CAACI,CAAV,EAAaL,CAAC,CAACG,MAAF,CAASG,KAAT,CAAeC,WAAf,GAA6B,SAA7B,CAAb,KACKP,CAAC,CAACG,MAAF,CAASG,KAAT,CAAeC,WAAf,GAA6B,KAA7B;;AAEL,cAAQP,CAAC,CAACG,MAAF,CAASjC,EAAjB;AACE,aAAK,OAAL;AACA,aAAK,aAAL;AACE,cAAI,CAAE+B,KAAK,CAACI,CAAR,IAAaL,CAAC,CAACG,MAAF,CAASC,KAA1B,EAAiCJ,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiB,MAAK7C,IAAL,CAAUc,cAAV,CAAyB2B,CAAC,CAACG,MAAF,CAASjC,EAAlC,CAAjB;AACjC,gBAAKX,IAAL,CAAUc,cAAV,CAAyB2B,CAAC,CAACG,MAAF,CAASjC,EAAlC,IAAwC8B,CAAC,CAACG,MAAF,CAASC,KAAjD;AACA,gBAAK7C,IAAL,CAAUiD,kBAAV,CAA6BR,CAAC,CAACG,MAAF,CAASjC,EAAtC,IAA4C8B,CAAC,CAACG,MAAF,CAASC,KAArD;AACA;;AACF,aAAK,QAAL;AAAe,cAAIH,KAAK,CAACI,CAAV,EAAa,MAAK9C,IAAL,CAAUiD,kBAAV,CAA6BR,CAAC,CAACG,MAAF,CAASjC,EAAtC,IAA4C8B,CAAC,CAACG,MAAF,CAASC,KAArD;AAA4D;;AACxF,aAAK,QAAL;AACE,cAAG,CAAEH,KAAK,CAACI,CAAX,EAAc;;AACd,gBAAK9C,IAAL,CAAUgB,KAAV,CAAgBkC,OAAhB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AACtC,gBAAID,OAAO,CAACtC,GAAR,KAAgB,MAAKb,IAAL,CAAUiB,SAA9B,EAAyC,MAAKjB,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoC+C,CAApC,EAAuCxC,MAAvC,GAAgD6B,CAAC,CAACG,MAAF,CAASC,KAAzD;AAC1C,WAFD;;AAGA;;AACF;AAAS;AAdX;AAgBD,KA7FkB;;AAAA,UAsGnBQ,YAtGmB,GAsGJ,UAACpC,SAAD,EAAe;AAC5B,YAAKjB,IAAL,CAAUiB,SAAV,GAAsBA,SAAtB;;AACA,YAAKsB,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAzGkB;;AAAA,UA2GnB8B,UA3GmB,GA2GN,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AAClC,YAAKA,MAAL,EAAaD,SAAb;AACD,KA7GkB;;AAAA,UA+GnBE,GA/GmB,GA+Gb,YAAM;AACV,YAAKzD,IAAL,CAAUiB,SAAV,GAAsB,CAAC,MAAKjB,IAAL,CAAUkB,QAAV,EAAD,EAAuBwC,QAAvB,EAAtB;;AACA,YAAK1D,IAAL,CAAUgB,KAAV,CAAgB2C,IAAhB,CAAqB;AAAEnD,QAAAA,KAAK,EAAE,WAAT;AAAsBoD,QAAAA,OAAO,EAAE,oBAA/B;AAAqD/C,QAAAA,GAAG,EAAE,MAAKb,IAAL,CAAUiB;AAApE,OAArB;;AACA,YAAKjB,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoCsD,IAApC,CAAyC;AAAEnD,QAAAA,KAAK,EAAE,EAAT;AAAaG,QAAAA,EAAE,EAAE,CAAC,CAAlB;AAAqBC,QAAAA,MAAM,EAAE,EAA7B;AAAiCC,QAAAA,GAAG,EAAE,MAAKb,IAAL,CAAUiB;AAAhD,OAAzC;;AACA,YAAKsB,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KApHkB;;AAAA,UAsHnBqC,MAtHmB,GAsHV,UAACN,SAAD,EAAe;AACtB,UAAIO,SAAS,GAAG,CAAhB;;AACA,YAAK9D,IAAL,CAAUgB,KAAV,CAAgBkC,OAAhB,CAAwB,UAACa,IAAD,EAAOX,CAAP,EAAa;AAAE,YAAIW,IAAI,CAAClD,GAAL,KAAa0C,SAAjB,EAA4BO,SAAS,GAAGV,CAAC,GAAG,CAAhB;AAAoB,OAAvF;;AAEA,UAAMY,aAAa,GAAG,MAAKhE,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoC6B,MAApC,CAA2C,UAAAiB,OAAO;AAAA,eAAIA,OAAO,CAACtC,GAAR,KAAgB0C,SAApB;AAAA,OAAlD,CAAtB;;AACA,UAAMvC,KAAK,GAAG,MAAKhB,IAAL,CAAUgB,KAAV,CAAgBkB,MAAhB,CAAuB,UAAA6B,IAAI;AAAA,eAAIA,IAAI,CAAClD,GAAL,KAAa0C,SAAjB;AAAA,OAA3B,CAAd;;AACA,YAAKvD,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,GAAsC2D,aAAtC;AACA,YAAKhE,IAAL,CAAUiB,SAAV,GAAsBD,KAAK,CAAC8C,SAAD,CAAL,CAAiBjD,GAAvC;AACA,YAAKb,IAAL,CAAUgB,KAAV,GAAkBA,KAAlB;;AACA,YAAKuB,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAhIkB;;AAAA,UAkInByC,YAlImB,GAkIJ,UAACpB,KAAD,EAAW;AACxB;AACA,UAAIqB,QAAQ,GAAG,MAAKlE,IAAL,CAAUK,MAAV,CAAiB6B,MAAjB,CAAwB,UAAAiC,GAAG;AAAA,eAAIA,GAAG,CAACxD,EAAJ,IAAUkC,KAAd;AAAA,OAA3B,EAAgD,CAAhD,CAAf;;AACA,UAAI,MAAK7C,IAAL,CAAUgB,KAAV,CAAgBkB,MAAhB,CAAuB,UAAAiB,OAAO;AAAA,eAAIA,OAAO,CAAC3C,KAAR,KAAkB0D,QAAQ,CAAC1D,KAA/B;AAAA,OAA9B,EAAoE4D,MAApE,GAA6E,CAAjF,EAAoF;AAClF,eAAO,SAAQC,KAAR,CAAc,mBAAd,CAAP;AACD;;AACD,YAAKrE,IAAL,CAAUgB,KAAV,CAAgBkC,OAAhB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AACtC,YAAID,OAAO,CAACtC,GAAR,KAAgB,MAAKb,IAAL,CAAUiB,SAA9B,EAAyC;AACvC,gBAAKjB,IAAL,CAAUgB,KAAV,CAAgBoC,CAAhB,EAAmB5C,KAAnB,GAA2B0D,QAAQ,CAAC1D,KAApC;AACA,gBAAKR,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoC+C,CAApC,EAAuC5C,KAAvC,GAA+C0D,QAAQ,CAAC1D,KAAxD;AACA,gBAAKR,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoC+C,CAApC,EAAuCzC,EAAvC,GAA4CuD,QAAQ,CAACvD,EAArD;AACD;AACF,OAND;;AAOA,YAAK4B,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAhJkB;;AAAA,UAkJnB8C,UAlJmB,GAkJN,YAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKxE,IAAL,CAAUiD,kBAAtB;AACA,UAAIwB,SAAS,GAAG,IAAhB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,MAAK3E,IAAL,CAAUiD,kBAAtB,EAA0C2B,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA8C,kBAAO/D,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxC6B,kBAAAA,KADwC,GAChCjD,IAAI,CAACkD,QAAL,CAAc9B,GAAd,EAAmB,MAAKb,IAAL,CAAUiD,kBAAV,CAA6BpC,GAA7B,CAAnB,CADgC;;AAE5C,sBAAI,CAAE6B,KAAK,CAACI,CAAZ,EAAe;AAAE,6BAAQuB,KAAR,CAAc3B,KAAK,CAACmC,GAApB;;AAA0BJ,oBAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9C;;AAAA;AAAA;AAAA;AAAA;AAIA,UAAI,CAAEA,SAAN,EAAiB;;AACjB,YAAKlC,QAAL,CAAc;AAAEhB,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC;AAAA,eAAM,MAAKvB,IAAL,CAAUiD,kBAAV,GAA+B6B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAKhF,IAAL,CAAUO,sBAAzB,CAAX,CAArC;AAAA,OAAnC;AACD,KA3JkB;;AAEjB,UAAKP,IAAL,CAAUiD,kBAAV,GAA+B6B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAKhF,IAAL,CAAUO,sBAAzB,CAAX,CAA/B;AAFiB;AAGlB;;;;yCAEoB;AAAA;;AACnB,UAAI,KAAKP,IAAL,CAAUI,KAAV,CAAgBgE,MAAhB,GAAyB,CAAzB,IAA8B,KAAKpE,IAAL,CAAUK,MAAV,CAAiB+D,MAAjB,GAA0B,CAA5D,EAA+D;AAE/D,UAAIhE,KAAK,GAAGX,IAAI,CAACwF,iBAAL,EAAZ;AACA,UAAI5E,MAAM,GAAGZ,IAAI,CAACyF,kBAAL,EAAb;AAEA,UAAI9E,KAAJ,EAAW,KAAKJ,IAAL,CAAUI,KAAV,GAAkBA,KAAlB,CAAX,KACK,KAAKL,KAAL,CAAWoF,SAAX,CAAqBC,UAArB,CAAgCC,yBAAhC,CAA0D;AAC7DC,QAAAA,OAAO,EAAE,iBAAAxD,GAAG,EAAI;AAAE,cAAIA,GAAJ,EAAS,MAAI,CAAC9B,IAAL,CAAUI,KAAV,sBAAsB,MAAI,CAACJ,IAAL,CAAUI,KAAhC,UAAuCX,IAAI,CAAC8F,MAAL,CAAYzD,GAAZ,CAAvC;AAA0D,SADxB;AAE7D0D,QAAAA,EAAE,EAAE;AAAA,iBAAM/F,IAAI,CAACgG,eAAL,CAAqB,MAAI,CAACzF,IAAL,CAAUI,KAA/B,CAAN;AAAA;AAFyD,OAA1D;;AAKL,UAAIC,MAAJ,EAAY;AACV,aAAKL,IAAL,CAAUK,MAAV,GAAmBA,MAAnB;AACA,aAAKL,IAAL,CAAUM,iBAAV,GAA8BD,MAAM,CAACuE,GAAP,CAAW,UAAAT,GAAG;AAAA,iBAAI,4BAAQ,MAAR;AAAe,YAAA,GAAG,EAAEA,GAAG,CAACxD,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BwD,GAAG,CAAC3D,KAAjC,OAAyC2D,GAAG,CAAC1D,WAA7C,CAAJ;AAAA,SAAd,CAA9B;AACA,aAAK8B,QAAL,CAAc;AAAEZ,UAAAA,YAAY,EAAE;AAAhB,SAAd,EAAsC;AAAA,iBAAM,MAAI,CAAC+D,yBAAL,EAAN;AAAA,SAAtC;AACD,OAJD,MAIO,KAAK3F,KAAL,CAAWoF,SAAX,CAAqBQ,aAArB,CAAmCC,WAAnC,CAA+C;AACpDN,QAAAA,OAAO,EAAE,iBAAAxD,GAAG,EAAI;AAAE,cAAIA,GAAJ,EAAS,MAAI,CAAC9B,IAAL,CAAUK,MAAV,sBAAuB,MAAI,CAACL,IAAL,CAAUK,MAAjC,UAAyCZ,IAAI,CAAC8F,MAAL,CAAYzD,GAAZ,CAAzC;AAA4D,SADnC;AAEpD0D,QAAAA,EAAE,EAAE,cAAM;AACR,UAAA,MAAI,CAACxF,IAAL,CAAUK,MAAV,CAAiBwF,IAAjB,CAAsB,UAACC,CAAD,EAAIhD,CAAJ,EAAU;AAC9B,gBAAIgD,CAAC,CAACnF,EAAF,GAAOmC,CAAC,CAACnC,EAAb,EAAiB,OAAO,CAAP,CAAjB,KACK,IAAImF,CAAC,CAACnF,EAAF,GAAOmC,CAAC,CAACnC,EAAb,EAAiB,OAAO,CAAC,CAAR;AACtB,mBAAO,CAAP;AACD,WAJD;;AAKAlB,UAAAA,IAAI,CAACsG,gBAAL,CAAsB,MAAI,CAAC/F,IAAL,CAAUK,MAAhC;AACA,UAAA,MAAI,CAACL,IAAL,CAAUM,iBAAV,GAA8B,MAAI,CAACN,IAAL,CAAUK,MAAV,CAAiBuE,GAAjB,CAAqB,UAAAT,GAAG;AAAA,mBAAI,4BAAQ,MAAR;AAAe,cAAA,GAAG,EAAEA,GAAG,CAACxD,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6BwD,GAAG,CAAC3D,KAAjC,OAAyC2D,GAAG,CAAC1D,WAA7C,CAAJ;AAAA,WAAxB,CAA9B;;AACA,UAAA,MAAI,CAAC8B,QAAL,CAAc;AAAEZ,YAAAA,YAAY,EAAE;AAAhB,WAAd,EAAsC;AAAA,mBAAM,MAAI,CAAC+D,yBAAL,EAAN;AAAA,WAAtC;AACD;AAXmD,OAA/C;AAaR;;;;;;;;;;;;;;uBAGmC,KAAK3F,KAAL,CAAWoF,SAAX,CAAqBa,kBAArB,CAAwCC,uBAAxC,E;;;AAAlC,qBAAKjG,IAAL,CAAUoB,e;AACV,qBAAKrB,KAAL,CAAWoF,SAAX,CAAqBa,kBAArB,CAAwCE,kBAAxC,CAA2D;AACzDZ,kBAAAA,OAAO,EAAE,iBAAAxD,GAAG;AAAA,2BAAI,MAAI,CAACD,cAAL,CAAoBC,GAApB,CAAJ;AAAA,mBAD6C;AAEzD0D,kBAAAA,EAAE,EAAE,cAAM;AACR,oBAAA,MAAI,CAACxF,IAAL,CAAUmB,gBAAV,GAA6B,MAAI,CAACnB,IAAL,CAAUoB,eAAvC;AACA3B,oBAAAA,IAAI,CAAC0G,sBAAL,CAA4B,MAAI,CAACnG,IAAL,CAAUG,WAAtC;;AACA,oBAAA,MAAI,CAACoC,QAAL,CAAc;AAAEb,sBAAAA,OAAO,EAAE;AAAX,qBAAd;AACD;AANwD,iBAA3D;;;;;;;;;;;;;;;;wCAUkB;AAClB;AACA,WAAK1B,IAAL,CAAUgB,KAAV,CAAgB2C,IAAhB,CAAqB;AAAEnD,QAAAA,KAAK,EAAE,WAAT;AAAsBoD,QAAAA,OAAO,EAAE,EAA/B;AAAmCvD,QAAAA,MAAM,EAAE,EAA3C;AAA+CQ,QAAAA,GAAG,EAAE,KAAKb,IAAL,CAAUiB,SAA9D;AAAyEmF,QAAAA,QAAQ,EAAE;AAAnF,OAArB;AACA,WAAK7D,QAAL,CAAc;AAAEf,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD;;;;;;iDAc2BW,C;;;;;AAC1B1C,gBAAAA,IAAI,CAAC8F,MAAL,CAAYpD,CAAZ;AACA,oBAAIA,CAAC,CAACkE,WAAN,EAAmBlE,CAAC,CAACkE,WAAF,GAAgB,KAAKrG,IAAL,CAAUK,MAAV,CAAiB6B,MAAjB,CAAwB,UAAAiC,GAAG;AAAA,yBAAIhC,CAAC,CAACkE,WAAF,CAAcC,QAAd,CAAuBnC,GAAG,CAACxD,EAAJ,CAAO+C,QAAP,EAAvB,CAAJ;AAAA,iBAA3B,CAAhB;kDACZvB,C;;;;;;;;;;;;;;;;6BA0BAU,K,EAAO;AACd,UAAI0D,KAAK,GAAG,IAAIC,MAAJ,CAAW3D,KAAX,EAAkB,GAAlB,CAAZ;AACA,UAAI,CAAEA,KAAN,EAAa,KAAK7C,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUG,WAA5B,CAAb,KACK,KAAKH,IAAL,CAAUC,KAAV,GAAkB,KAAKD,IAAL,CAAUG,WAAV,CAAsB+B,MAAtB,CAA6B,UAAAiB,OAAO;AAAA,eAAIuB,MAAM,CAAC+B,MAAP,CAActD,OAAd,EAAuBjB,MAAvB,CAA8B,UAAAiC,GAAG;AAAA,iBAAIA,GAAG,CAACT,QAAJ,GAAegD,KAAf,CAAqBH,KAArB,CAAJ;AAAA,SAAjC,EAAkEnC,MAAlE,GAA2E,CAA/E;AAAA,OAApC,CAAlB;AACL,WAAK7B,QAAL,CAAc;AAAEd,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;;;8CAyDyBkF,M,EAAQC,K,EAAO;AACvC,aAAMC,IAAN,CAAW;AACTC,QAAAA,KAAK,EAAE,KADE;AAETC,QAAAA,YAAY,EAAE,IAFL;AAGTvG,QAAAA,KAAK,EAAEmG,MAAM,CAACnG,KAHL;AAIToD,QAAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,KAAK,EAAE;AAAEoD,YAAAA,YAAY,EAAE,MAAhB;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAqEN,MAAM,CAACO,SAA5E,CADF,EAC6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD7F,EAEE;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0CR,MAAM,CAAChG,EAAjD,CAFF,EAE2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAF3D,EAGE;AAAI,UAAA,KAAK,EAAE;AAAEwG,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmDR,MAAM,CAAClG,WAA1D,CAHF,EAG6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAH7E,EAIE;AAAI,UAAA,KAAK,EAAE;AAAE0G,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA8CR,MAAM,CAACjG,MAArD,CAJF,OAIoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJpE,EAKE;AAAI,UAAA,KAAK,EAAE;AAAEyG,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA2CR,MAAM,CAACrE,YAAlD,SAAmEqE,MAAM,CAACtE,OAA1E,cACE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAEsE,MAAM,CAACtE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,SAAQwE,IAAR,CAAa,WAAb,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CALF,EASO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATP,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAI,UAAA,KAAK,EAAE;AAAEO,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR,CAVF,EAWE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,MAAM,EAAC,IAA3B;AAAgC,UAAA,OAAO,EAAExH,aAAzC;AAAwD,UAAA,UAAU,EAAE+G,MAAM,CAACN,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CALO;AAmBTgB,QAAAA,IAnBS,kBAmBF,CAAE;AAnBA,OAAX;AAqBD;;;mCAEc;AAAA;;AACb,aAAO,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AACE,QAAA,QAAQ,EAAE,KAAKhE,YADjB;AAEE,QAAA,SAAS,EAAE,KAAKrD,IAAL,CAAUiB,SAFvB;AAGE,QAAA,IAAI,EAAC,eAHP;AAIE,QAAA,MAAM,EAAE,KAAKqC,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK,KAAKjC,KAAL,CAAWG,YAAX,IAA2B,KAAKxB,IAAL,CAAUgB,KAAV,CAAgB4D,GAAhB,CAAoB,UAAAb,IAAI;AAAA,eAClD,0BAAM,OAAN;AAAc,UAAA,GAAG,EAAEA,IAAI,CAACvD,KAAxB;AAA+B,UAAA,GAAG,EAAEuD,IAAI,CAAClD,GAAzC;AAA8C,UAAA,QAAQ,EAAEkD,IAAI,CAACqC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,UAAU,MADZ;AAEE,UAAA,KAAK,EAAE;AAAEU,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,gBAAgB,EAAC,UAJnB;AAKE,UAAA,QAAQ,EAAE,MAAI,CAAC7C,YALjB;AAME,UAAA,YAAY,EAAE,sBAACqD,KAAD,EAAQC,MAAR,EAAmB;AAC/B;AACA,gBAAIrD,QAAQ,GAAG,MAAI,CAAClE,IAAL,CAAUK,MAAV,CAAiB6B,MAAjB,CAAwB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACxB,EAAF,IAAQ4G,MAAM,CAAC1G,GAAnB;AAAA,aAAzB,CAAf;;AACA,gBAAI,CAAEqD,QAAF,IAAc,CAAEzE,IAAI,CAAC+H,aAAL,CAAmBtD,QAAQ,CAAC,CAAD,CAAR,CAAY1D,KAAZ,GAAkB0D,QAAQ,CAAC,CAAD,CAAR,CAAYzD,WAAjD,EAA8D6G,KAA9D,CAApB,EAA0F,OAAO,KAAP;AAC1F,mBAAO,IAAP;AACD,WAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAaG,MAAI,CAACtH,IAAL,CAAUM,iBAbb,CADF,EAgBE;AAAO,UAAA,EAAE,EAAC,QAAV;AAAmB,UAAA,QAAQ,EAAE,MAAI,CAACkC,oBAAlC;AAAwD,UAAA,WAAW,EAAC,yBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,CADkD;AAAA,OAAxB,CALhC,CADK,CAAP;AA4BD;;;gCAEW;AACV,WAAKD,QAAL,CAAc;AAAEjB,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACA,WAAKvB,KAAL,CAAW0H,SAAX;AACD;;;6CAEwB;AAAA;;AACvB,aAAO;AACL,QAAA,KAAK,EAAC,KADD;AAEL,QAAA,KAAK,EAAC,qBAFD;AAGL,QAAA,OAAO,EAAE,KAAKpG,KAAL,CAAWC,eAHf;AAIL,QAAA,IAAI,EAAE,KAAKgD,UAJN;AAKL,QAAA,MAAM,EAAC,KALF;AAML,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAAC/B,QAAL,CAAc;AAAEjB,YAAAA,eAAe,EAAE,KAAnB;AAA0BC,YAAAA,SAAS,EAAE;AAArC,WAAd,CAAN;AAAA,SANL;AAOL,QAAA,QAAQ,EAAE,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASJ,KAAKF,KAAL,CAAWE,SAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADG,EAEH,oBAAC,eAAD;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWoF,SAAX,CAAqBa,kBAArB,CAAwC0B,iBAAxC,CACP,KAAK1H,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoCuE,GAApC,CAAwC,UAAAT,GAAG;AAAA,iBAAIA,GAAG,CAACxD,EAAR;AAAA,SAA3C,CADO,EAEP,KAAKX,IAAL,CAAUiD,kBAAV,CAA6B5C,MAA7B,CAAoCuE,GAApC,CAAwC,UAAAT,GAAG;AAAA,iBAAIA,GAAG,CAACvD,MAAR;AAAA,SAA3C,CAFO,EAGP+G,MAAM,CAACC,IAAP,CAAY,KAAK5H,IAAL,CAAUiD,kBAAV,CAA6BzC,KAAzC,CAHO,EAIPmH,MAAM,CAACC,IAAP,CAAY,KAAK5H,IAAL,CAAUiD,kBAAV,CAA6BxC,WAAzC,CAJO,EAKPlB,IAAI,CAACsI,KAAL,CAAWC,KAAX,CAAiB,KAAK9H,IAAL,CAAUiD,kBAAV,CAA6BvC,MAA7B,CAAoCgD,QAApC,EAAjB,EAAiE,OAAjE,CALO,EAMP,KANO,CAFX;AASE,QAAA,KAAK,EAAC,mBATR;AAUE,QAAA,OAAO,EAAC,UAVV;AAWE,QAAA,WAAW,EAAC,MAXd;AAYE,QAAA,MAAM,EAAE,GAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,EAgBH;AAAI,QAAA,KAAK,EAAE;AAAE0D,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyC,KAAKpH,IAAL,CAAUiD,kBAAV,CAA6BzC,KAAtE,CAhBG,EAiBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa,KAAKR,IAAL,CAAUiD,kBAAV,CAA6BvC,MAA1C,UAjBG,CAAL,CADD,GAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADP,EAEE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,QAAQ,EAAE,KAAK8B,oBAAjC;AAAuD,QAAA,WAAW,EAAC,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,MAAM,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,EAEE;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAE,KAAKA,oBAHjB;AAIE,QAAA,WAAW,EAAC,qDAJd;AAKE,QAAA,UAAU,EAAC,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CADF,EAiBE;AAAM,QAAA,MAAM,EAAC,UAAb;AAAwB,QAAA,KAAK,EAAE;AAAE2E,UAAAA,MAAM,EAAE;AAAV,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb,EAEE;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,QAAQ,EAAE,KAAK3E,oBAAvC;AAA6D,QAAA,WAAW,EAAC,mCAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHP,2BAGkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHlC,EAIG,KAAKuF,YAAL,EAJH,CAjBF,EAuBE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACN,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBF,CA9BG,CAAP;AAyDD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAClF,QAAL,CAAc;AAAEjB,YAAAA,eAAe,EAAE;AAAnB,WAAd,CAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAOE,2BAAO,MAAP;AACE,QAAA,WAAW,EAAC,iCADd;AAEE,QAAA,QAAQ,EAAE,kBAAAmB,CAAC;AAAA,iBAAI,MAAI,CAACuF,QAAL,CAAcvF,CAAC,CAACG,MAAF,CAASC,KAAvB,CAAJ;AAAA,SAFb;AAGE,QAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACmF,QAAL,CAAcnF,KAAd,CAAJ;AAAA,SAHjB;AAIE,QAAA,WAAW,MAJb;AAKE,QAAA,KAAK,EAAE;AAAEiE,UAAAA,KAAK,EAAE,KAAT;AAAgBG,UAAAA,KAAK,EAAE,OAAvB;AAAgCD,UAAAA,YAAY,EAAE;AAA9C,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,EAgBE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAG,CAACiB,MAAM,CAAC,KAAKjI,IAAL,CAAUmB,gBAAV,GAA6B,KAAKnB,IAAL,CAAUoB,eAAvC,GAAyD,GAA1D,CAAN,CAAqE8G,OAArE,CAA6E,CAA7E,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAgBuH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBvH,EAgB6H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhB7H,EAiBE;AACE,QAAA,MAAM,EAAE,gBAAAvB,MAAM;AAAA,iBAAIA,MAAM,CAAChG,EAAX;AAAA,SADhB;AAEE,QAAA,KAAK,EAAE,eAACgG,MAAD,EAASC,KAAT;AAAA,iBAAoB;AAAEuB,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,yBAAL,CAA+BzB,MAA/B,EAAuCC,KAAvC,CAAN;AAAA;AAAX,WAApB;AAAA,SAFT;AAGE,QAAA,OAAO,EAAElH,YAHX;AAIE,QAAA,UAAU,EAAG,KAAKM,IAAL,CAAUC,KAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAuBG,KAAKoB,KAAL,CAAWM,YAAX,IAA2B,KAAK0G,sBAAL,EAvB9B,CADF;AA2BD;;;;EA9UuBjJ,KAAK,CAACkJ,S;;AAiVhC,SAAQxI,WAAR","sourcesContent":["import React from 'react';\nimport { Table, Input, Modal, Row, Col, Button, Select, Form, Tabs, Progress, message } from 'antd';\nimport { SendTransaction } from 'metasdk-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport web3 from '../ethereum/web3';\nimport { columns } from './columns';\nimport * as util from '../util';\n\nconst tableColumns = columns.achievementColumns;\nconst detailColumns = columns.achievementDetailColumns;\n\nclass Achievement extends React.Component {\n\n  data = {\n    items: [],\n    localStorageItem: [],\n    originItems: [],\n    users: [],\n    topics: [],\n    originClaimTopics: [],\n    initNewAchievementItem: { title: '', explanation: '', reward: '', topics: [{ title: '', id: -1, issuer: '', key: '0' }] },\n    inputValidData: [],\n    topicIssuerMap: [],\n    panes: [],\n    activeKey: '0',\n    tabIndex: 1,\n    loadedAchieveCnt: 0,\n    totalAchieveCnt: 1,\n  };\n\n  state = {\n    addModalVisible: false,\n    qrVisible: false,\n    didTabChange: false,\n    didSearch: false,\n    loading: false,\n    getTopicInfo: false,\n    getAchievementInfo: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.data.newAchievementItem = JSON.parse(JSON.stringify(this.data.initNewAchievementItem));\n  }\n\n  componentWillMount() {\n    if (this.data.users.length > 0 || this.data.topics.length > 0) return;\n\n    let users = util.getUsersFromLocal();\n    let topics = util.getTopicsFromLocal();\n\n    if (users) this.data.users = users;\n    else this.props.contracts.aaRegistry.getAllAttestationAgencies({\n      handler: ret => { if (ret) this.data.users = [...this.data.users, util.refine(ret)] },\n      cb: () => util.setUsersToLocal(this.data.users)\n    });\n\n    if (topics) {\n      this.data.topics = topics;\n      this.data.originClaimTopics = topics.map(val => <Select.Option key={val.id}>{val.title}:{val.explanation}</Select.Option>);\n      this.setState({ getTopicInfo: true }, () => this.achievementDynamicLoading());\n    } else this.props.contracts.topicRegistry.getAllTopic({\n      handler: ret => { if (ret) this.data.topics = [...this.data.topics, util.refine(ret)] },\n      cb: () => {\n        this.data.topics.sort((a, b) => {\n          if (a.id > b.id) return 1;\n          else if (a.id < b.id) return -1;\n          return 0;\n        });\n        util.setTopicsToLocal(this.data.topics);\n        this.data.originClaimTopics = this.data.topics.map(val => <Select.Option key={val.id}>{val.title}:{val.explanation}</Select.Option>);\n        this.setState({ getTopicInfo: true }, () => this.achievementDynamicLoading());\n      }\n    });\n  }\n\n  async achievementDynamicLoading() {\n    this.data.totalAchieveCnt = await this.props.contracts.achievementManager.getLengthOfAchievements();\n    this.props.contracts.achievementManager.getAllAchievements({\n      handler: ret => this.addAchievement(ret),\n      cb: () => {\n        this.data.loadedAchieveCnt = this.data.totalAchieveCnt;\n        util.setAchievementsToLocal(this.data.originItems);\n        this.setState({ loading: true });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Init tab value\n    this.data.panes.push({ title: 'New Topic', content: '', topics: [], key: this.data.activeKey, closable: false });\n    this.setState({ didTabChange: true });\n  }\n\n  addAchievement = async (ret) => {\n    ++this.data.loadedAchieveCnt;\n    if (! ret) return;\n    let newItem = await this.getAchievementFromMap(ret);\n    let user = this.data.users.filter(m => m.addr === ret.creator);\n    if (user) ret.creatorTitle = user[0].title;\n    else ret.creatorTitle = ret.creator;\n    this.data.items = [...this.data.items, newItem];\n    this.data.originItems = this.data.items;\n    this.setState({ getAchievementInfo: true });\n  }\n\n  async getAchievementFromMap(m) {\n    util.refine(m);\n    if (m.claimTopics) m.claimTopics = this.data.topics.filter(val => m.claimTopics.includes(val.id.toString()));\n    return m;\n  }\n\n  updateNewAchieveInfo = (e) => {\n    let valid = util.validate(e.target.id, e.target.value);\n    if (valid.b) e.target.style.borderColor = '#3db389';\n    else e.target.style.borderColor = 'red';\n\n    switch (e.target.id) {\n      case 'title':\n      case 'explanation':\n        if (! valid.b && e.target.value) e.target.value = this.data.inputValidData[e.target.id];\n        this.data.inputValidData[e.target.id] = e.target.value;\n        this.data.newAchievementItem[e.target.id] = e.target.value;\n        break;\n      case 'reward': if (valid.b) this.data.newAchievementItem[e.target.id] = e.target.value; break;\n      case 'issuer':\n        if(! valid.b) break;\n        this.data.panes.forEach((element, i) => {\n          if (element.key === this.data.activeKey) this.data.newAchievementItem.topics[i].issuer = e.target.value;\n        });\n        break;\n      default: break;\n    }\n  }\n\n  onSearch(value) {\n    var regex = new RegExp(value, 'i');\n    if (! value) this.data.items = this.data.originItems;\n    else this.data.items = this.data.originItems.filter(element => Object.values(element).filter(val => val.toString().match(regex)).length > 0);\n    this.setState({ didSearch: true });\n  }\n\n  onTabsChange = (activeKey) => {\n    this.data.activeKey = activeKey;\n    this.setState({ didTabChange: true });\n  }\n\n  onTabsEdit = (targetKey, action) => {\n    this[action](targetKey);\n  }\n\n  add = () => {\n    this.data.activeKey = (this.data.tabIndex++).toString();\n    this.data.panes.push({ title: 'New Topic', content: 'Content of new tab', key: this.data.activeKey });\n    this.data.newAchievementItem.topics.push({ title: '', id: -1, issuer: '', key: this.data.activeKey });\n    this.setState({ didTabChange: true });\n  }\n  \n  remove = (targetKey) => {\n    let lastIndex = 0;\n    this.data.panes.forEach((pane, i) => { if (pane.key === targetKey) lastIndex = i - 1; });\n\n    const newTopicItems = this.data.newAchievementItem.topics.filter(element => element.key !== targetKey);\n    const panes = this.data.panes.filter(pane => pane.key !== targetKey);\n    this.data.newAchievementItem.topics = newTopicItems;\n    this.data.activeKey = panes[lastIndex].key;\n    this.data.panes = panes;\n    this.setState({ didTabChange: true });\n  }\n\n  onTopicClick = (value) => {\n    // eslint-disable-next-line\n    let selected = this.data.topics.filter(val => val.id == value)[0];\n    if (this.data.panes.filter(element => element.title === selected.title).length > 0) {\n      return message.error('Duplicated topic.');\n    }\n    this.data.panes.forEach((element, i) => {\n      if (element.key === this.data.activeKey) {\n        this.data.panes[i].title = selected.title;\n        this.data.newAchievementItem.topics[i].title = selected.title;\n        this.data.newAchievementItem.topics[i].id = selected.id;\n      }\n    });\n    this.setState({ didTabChange: true });\n  }\n\n  onAddClick = () => {\n    console.log(this.data.newAchievementItem);\n    var formCheck = true;\n    Object.keys(this.data.newAchievementItem).map(async (key) => {\n      let valid = util.validate(key, this.data.newAchievementItem[key]);\n      if (! valid.b) { message.error(valid.err); formCheck = false; }\n    });\n    if (! formCheck) return;\n    this.setState({ qrVisible: true }, () => this.data.newAchievementItem = JSON.parse(JSON.stringify(this.data.initNewAchievementItem)));\n  }\n\n  getModalAchievementDetail(record, index) {\n    Modal.info({\n      width: '50%',\n      maskClosable: true,\n      title: record.title,\n      content: (\n        <div>\n          <h5 style={{ marginBottom: '10px', float: 'right' }}>Registered on: {record.createdAt}</h5><br />\n          <h4 style={{ margin: '10px 0 0 0' }}>ID: {record.id}</h4><hr />\n          <h4 style={{ margin: '10px 0 0 0' }}>Explanation: {record.explanation}</h4><hr />\n          <h4 style={{ margin: '10px 0 0 0' }}>Reward: {record.reward}</h4> <hr />\n          <h4 style={{ margin: '10px 0' }}>Creator: {record.creatorTitle} / {record.creator}&nbsp;&nbsp;\n            <CopyToClipboard text={record.creator}>\n              <Button onClick={() => message.info('Copied !!')}>copy</Button>\n            </CopyToClipboard>\n          </h4><hr />\n          <center><h3 style={{ marginTop: '30px' }}>Required Topics</h3></center>\n          <Table size='small' rowKey='id' columns={detailColumns} dataSource={record.claimTopics} />\n        </div>\n      ),\n      onOk() {}\n    });\n  }\n\n  getTopicTabs() {\n    return <Form.Item>\n      <Tabs\n        onChange={this.onTabsChange}\n        activeKey={this.data.activeKey}\n        type='editable-card'\n        onEdit={this.onTabsEdit}>\n          {this.state.didTabChange && this.data.panes.map(pane =>\n            <Tabs.TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\n              <Select\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Topic'\n                optionFilterProp='children'\n                onChange={this.onTopicClick}\n                filterOption={(input, option) => {\n                  // eslint-disable-next-line\n                  let selected = this.data.topics.filter(m => m.id == option.key);\n                  if (! selected || ! util.cmpIgnoreCase(selected[0].title+selected[0].explanation, input)) return false;\n                  return true;\n                }}\n              >\n                {this.data.originClaimTopics}\n              </Select>\n              <Input id='issuer' onChange={this.updateNewAchieveInfo} placeholder='Enter Meta ID of Issuer' />\n            </Tabs.TabPane>)\n          }\n      </Tabs>\n    </Form.Item>\n  }\n\n  moveToFAQ() {\n    this.setState({ addModalVisible: false });\n    this.props.moveToFAQ();\n  }\n\n  getModalAddAchievement() {\n    return <Modal\n      width='40%'\n      title='Add New Achievement'\n      visible={this.state.addModalVisible}\n      onOk={this.onAddClick}\n      okText='Add'\n      onCancel={() => this.setState({ addModalVisible: false, qrVisible: false })}\n      closable={false}\n      >\n      {this.state.qrVisible ?\n        <div><center>\n          <h1>Scan QR Code to Add New Achievement</h1>\n          <SendTransaction\n            id='sendTransaction'\n            request={this.props.contracts.achievementManager.createAchievement(\n              this.data.newAchievementItem.topics.map(val => val.id),\n              this.data.newAchievementItem.topics.map(val => val.issuer),\n              Buffer.from(this.data.newAchievementItem.title),\n              Buffer.from(this.data.newAchievementItem.explanation),\n              web3.utils.toWei(this.data.newAchievementItem.reward.toString(), 'ether'),\n              'uri')}\n            usage='createAchievement'\n            service='metagate'\n            callbackUrl='none'\n            qrsize={256}\n          />\n          <h2 style={{ marginTop: '6%' }} >Title: {this.data.newAchievementItem.title}</h2>\n          <h2>Reward: {this.data.newAchievementItem.reward} META</h2>\n        </center></div>\n        :\n        <div>\n          <Row>\n            <Col span={12}>\n              Title<br />\n              <Input id='title' onChange={this.updateNewAchieveInfo} placeholder='Input Title' />\n            </Col>\n            <Col span={11} offset={1}>\n              Reward<br />\n              <Input\n                id='reward'\n                type='number'\n                onChange={this.updateNewAchieveInfo}\n                placeholder='Input META Amount. Reward needs to be higher than 5'\n                addonAfter='META'\n              />\n            </Col>\n          </Row>\n          <Form layout='vertical' style={{ margin: '30px 0' }}>\n            Explanation<br />\n            <Input id='explanation' onChange={this.updateNewAchieveInfo} placeholder='Enter Explanation (max. 32 bytes)' />\n            <p /><hr />Required Claim Topics<p />\n            {this.getTopicTabs()}\n          </Form>\n          <a onClick={() => this.moveToFAQ()}>FAQ</a>\n        </div>\n        }\n    </Modal>\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Button\n            type='primary'\n            size='large'\n            onClick={() => this.setState({ addModalVisible: true })}>\n            Add New Achievement\n          </Button>\n          <Input.Search\n            placeholder='Search by Creator, No., Keyword'\n            onChange={e => this.onSearch(e.target.value)}\n            onSearch={value => this.onSearch(value)}\n            enterButton\n            style={{ width: '50%', float: 'right', marginBottom: '20px' }}\n          />\n        </div>\n        <Progress type='line' percent={ +Number(this.data.loadedAchieveCnt / this.data.totalAchieveCnt * 100).toFixed(2) } /><br /><br />\n        <Table\n          rowKey={record => record.id}\n          onRow={(record, index) => ({ onClick: () => this.getModalAchievementDetail(record, index) })}\n          columns={tableColumns}\n          dataSource={ this.data.items }\n        />\n        {this.state.getTopicInfo && this.getModalAddAchievement()}\n      </div>\n    );\n  }\n}\n\nexport {Achievement}"]},"metadata":{},"sourceType":"module"}