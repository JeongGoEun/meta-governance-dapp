{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _bem = require('../lib/bem');\n\nvar _resize = require('../lib/resize');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TabContent = function (_PureComponent) {\n  _inherits(TabContent, _PureComponent);\n\n  function TabContent(props, context) {\n    _classCallCheck(this, TabContent);\n\n    var _this = _possibleConstructorReturn(this, (TabContent.__proto__ || Object.getPrototypeOf(TabContent)).call(this, props, context));\n\n    _this.state = {\n      fastTransition: false,\n      height: null\n    };\n    _this.getRef = _this.getRef.bind(_this);\n    _this.onResize = _this.onResize.bind(_this);\n    _this.update = _this.update.bind(_this);\n    return _this;\n  }\n\n  _createClass(TabContent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.context.bem.subscribe(this);\n      this.context.tabbordionPanel.subscribe(this); // add reference here to reduce unnecessary references server side\n\n      this.onResize.getState = this.context.tabbordionPanel.getState;\n      (0, _resize.addResizeListener)(this.onResize);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.update();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props, context) {\n      // this should not happen but we know bugs happen when unexpected things happen\n      if (context.tabbordionPanel !== this.context.tabbordionPanel) {\n        this.onResize.getState = context.tabbordionPanel.getState;\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _resize.removeResizeListener)(this.onResize);\n      this.context.bem.unsubscribe(this);\n      this.context.tabbordionPanel.unsubscribe(this);\n    }\n  }, {\n    key: 'getRef',\n    value: function getRef(child) {\n      this.child = child;\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      this.update('resize');\n    }\n  }, {\n    key: 'update',\n    value: function update(triggerer) {\n      var _this2 = this;\n\n      if (!this.child) {\n        return;\n      }\n\n      var _child$getBoundingCli = this.child.getBoundingClientRect(),\n          bottom = _child$getBoundingCli.bottom,\n          top = _child$getBoundingCli.top;\n\n      var height = Math.ceil(bottom - top);\n      var fastTransition = this.state.fastTransition;\n\n      if (this.state.height !== height) {\n        // make all transitions go faster to give smoother experience\n        if (triggerer === 'resize') {\n          fastTransition = true;\n        }\n\n        this.setState({\n          fastTransition: fastTransition,\n          height: height\n        });\n      } // kills the previous timeout after each resize event so that fast mode is alive until after last resize event\n\n\n      if (triggerer === 'resize' && fastTransition) {\n        clearTimeout(this._dtt);\n        this._dtt = setTimeout(function () {\n          delete _this2._dtt;\n\n          _this2.setState({\n            fastTransition: false\n          });\n        }, 500);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          Component = _props.component,\n          style = _props.style,\n          props = _objectWithoutProperties(_props, ['children', 'className', 'component', 'style']);\n\n      var _context$bem$getState = this.context.bem.getState(),\n          bemSeparator = _context$bem$getState.bemSeparator,\n          blockElements = _context$bem$getState.blockElements;\n\n      var _context$tabbordionPa = this.context.tabbordionPanel.getState(),\n          animateContent = _context$tabbordionPa.animateContent,\n          checked = _context$tabbordionPa.checked,\n          contentId = _context$tabbordionPa.contentId,\n          inputId = _context$tabbordionPa.inputId,\n          modifiers = _context$tabbordionPa.modifiers;\n\n      var panelBem = (0, _bem.bemClassName)(blockElements, 'content', modifiers, bemSeparator);\n      var animatorBem = (0, _bem.bemClassName)(blockElements, 'animator', modifiers, bemSeparator);\n      var height = animateContent === 'height' ? checked ? this.state.height && this.state.height + 'px' || 'auto' : '0px' : null;\n      var marginTop = animateContent === 'marginTop' ? !checked ? this.state.height && -this.state.height + 'px' || '-65535px' : '0px' : null;\n      var resizeStyle = this.state.fastTransition ? {\n        webkitTransition: 'all 32ms',\n        transition: 'all 32ms'\n      } : null; // contentId will be overwritten by props.id (intended behavior)\n\n      return animateContent ? _react2.default.createElement(Component, _extends({\n        id: contentId\n      }, props, {\n        'aria-labelledby': inputId,\n        className: !animatorBem ? className : className ? animatorBem + ' ' + className : animatorBem,\n        role: 'tabpanel',\n        style: _extends({}, style, {\n          height: height,\n          overflow: checked && animateContent === 'marginTop' ? 'visible' : 'hidden'\n        }, resizeStyle)\n      }), _react2.default.createElement('div', {\n        ref: this.getRef,\n        className: panelBem,\n        style: marginTop && _extends({\n          marginTop: marginTop\n        }, resizeStyle)\n      }, children)) : _react2.default.createElement(Component, _extends({\n        id: contentId\n      }, props, {\n        'aria-labelledby': inputId,\n        className: !panelBem ? className : className ? panelBem + ' ' + className : panelBem,\n        ref: this.getRef,\n        role: 'tabpanel',\n        style: style\n      }), children);\n    }\n  }]);\n\n  return TabContent;\n}(_react.PureComponent);\n\nTabContent.hasContent = true;\nTabContent.contextTypes = {\n  bem: _propTypes2.default.object,\n  tabbordionPanel: _propTypes2.default.object\n};\nTabContent.defaultProps = {\n  component: 'div'\n};\nTabContent.propTypes = {\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object, _propTypes2.default.string]),\n  style: _propTypes2.default.object\n};\nexports.default = TabContent;","map":null,"metadata":{},"sourceType":"script"}