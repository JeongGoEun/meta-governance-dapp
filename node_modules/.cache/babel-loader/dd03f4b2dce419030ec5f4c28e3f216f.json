{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeong-go-eun/Desktop/metagate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport web3 from '../web3';\nimport web3config from '../web3-config.json';\nimport { getAddresses } from './addresses';\nimport { getBranch, getABI } from './helpers';\n\nvar AchievementManager =\n/*#__PURE__*/\nfunction () {\n  function AchievementManager() {\n    _classCallCheck(this, AchievementManager);\n  }\n\n  _createClass(AchievementManager, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _getAddresses, ACHIEVEMENT_MANAGER_ADDRESS, branch, achievementManagerAbi;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _getAddresses = getAddresses(web3config.netid), ACHIEVEMENT_MANAGER_ADDRESS = _getAddresses.ACHIEVEMENT_MANAGER_ADDRESS;\n                branch = getBranch(web3config.netid);\n                _context.next = 4;\n                return getABI(branch, 'AchievementManager');\n\n              case 4:\n                achievementManagerAbi = _context.sent;\n                this.achievementManagerInstance = new web3.eth.Contract(achievementManagerAbi.abi, ACHIEVEMENT_MANAGER_ADDRESS);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function init() {\n        return _init.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return AchievementManager;\n}();\n\nexport { AchievementManager };","map":{"version":3,"sources":["/Users/jeong-go-eun/Desktop/metagate/src/ethereum/contracts/AchievementManager.contract.js"],"names":["web3","web3config","getAddresses","getBranch","getABI","AchievementManager","netid","ACHIEVEMENT_MANAGER_ADDRESS","branch","achievementManagerAbi","achievementManagerInstance","eth","Contract","abi"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,WAAlC;;IAEMC,kB;;;;;;;;;;;;;;;;;;;gCAEsCH,YAAY,CAACD,UAAU,CAACK,KAAZ,C,EAA5CC,2B,iBAAAA,2B;AACFC,gBAAAA,M,GAASL,SAAS,CAACF,UAAU,CAACK,KAAZ,C;;uBAEYF,MAAM,CAACI,MAAD,EAAS,oBAAT,C;;;AAApCC,gBAAAA,qB;AACN,qBAAKC,0BAAL,GAAkC,IAAIV,IAAI,CAACW,GAAL,CAASC,QAAb,CAAsBH,qBAAqB,CAACI,GAA5C,EAAiDN,2BAAjD,CAAlC;;;;;;;;;;;;;;;;;;;AAIJ,SAAQF,kBAAR","sourcesContent":["import web3 from '../web3';\nimport web3config from '../web3-config.json';\nimport { getAddresses } from './addresses';\nimport { getBranch, getABI } from './helpers';\n\nclass AchievementManager {\n  async init() {\n    const { ACHIEVEMENT_MANAGER_ADDRESS } = getAddresses(web3config.netid);\n    const branch = getBranch(web3config.netid);\n\n    const achievementManagerAbi = await getABI(branch, 'AchievementManager');\n    this.achievementManagerInstance = new web3.eth.Contract(achievementManagerAbi.abi, ACHIEVEMENT_MANAGER_ADDRESS);\n  }\n}\n\nexport {AchievementManager}"]},"metadata":{},"sourceType":"module"}