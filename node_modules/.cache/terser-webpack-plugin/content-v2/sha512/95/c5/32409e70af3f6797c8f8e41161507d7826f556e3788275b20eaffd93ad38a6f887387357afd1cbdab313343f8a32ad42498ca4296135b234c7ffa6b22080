{"map":"{\"version\":3,\"sources\":[\"/Users/jeong-go-eun/Desktop/meta-voting-dapp/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-8!/Users/jeong-go-eun/Desktop/meta-voting-dapp/src/logo.svg\",\"/Users/jeong-go-eun/Desktop/meta-voting-dapp/src/App.js\",\"/Users/jeong-go-eun/Desktop/meta-voting-dapp/src/serviceWorker.js\",\"/Users/jeong-go-eun/Desktop/meta-voting-dapp/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Header\",\"Content\",\"Footer\",\"App\",\"react_default\",\"a\",\"createElement\",\"layout\",\"className\",\"style\",\"padding\",\"menu\",\"theme\",\"mode\",\"defaultSelectedKeys\",\"lineHeight\",\"Item\",\"key\",\"marginLeft\",\"es_button\",\"background\",\"minHeight\",\"textAlign\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oOCKhCC,qBAAAA,QAAQC,MAAAA,QAASC,MAAAA,OAiCVC,mLA7BX,OACEC,EAAAC,EAAAC,cAAAC,EAAA,EAAA,CAAQC,UAAU,UAChBJ,EAAAC,EAAAC,cAACN,EAAD,CAAQS,MAAO,CAAEC,QAAS,UACxBN,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SACfJ,EAAAC,EAAAC,cAAAK,EAAA,EAAA,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBL,MAAO,CAAEM,WAAY,SAErBX,EAAAC,EAAAC,cAAAK,EAAA,EAAMK,KAAN,CAAWC,IAAI,IAAIR,MAAO,CAAES,WAAY,QAAxC,OACAd,EAAAC,EAAAC,cAAAK,EAAA,EAAMK,KAAN,CAAWC,IAAI,KAAf,UACAb,EAAAC,EAAAC,cAAAK,EAAA,EAAMK,KAAN,CAAWC,IAAI,KAAf,eACAb,EAAAC,EAAAC,cAAAa,EAAA,EAAA,CAAQV,MAAO,CAAES,WAAY,OAA7B,gBAIJd,EAAAC,EAAAC,cAACL,EAAD,CAASQ,MAAO,CAAEC,QAAS,UACzBN,EAAAC,EAAAC,cAAA,MAAA,CAAKG,MAAO,CAAEW,WAAY,OAAQV,QAAS,GAAIW,UAAW,MAA1D,YAGFjB,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,MAAO,CAAEa,UAAW,WAA5B,kDAvBUC,EAAAA,WCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport { Layout, Menu, Button } from 'antd';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nconst { Header, Content, Footer } = Layout;\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Layout className=\\\"layout\\\">\\n        <Header style={{ padding: '0 15%' }}>\\n          <div className=\\\"logo\\\" />\\n          <Menu\\n            theme=\\\"dark\\\"\\n            mode=\\\"horizontal\\\"\\n            defaultSelectedKeys={['1']}\\n            style={{ lineHeight: '64px'}}\\n          >\\n            <Menu.Item key=\\\"1\\\" style={{ marginLeft: '60%' }} >All</Menu.Item>\\n            <Menu.Item key=\\\"2\\\">Active</Menu.Item>\\n            <Menu.Item key=\\\"3\\\">To Finalize</Menu.Item>\\n            <Button style={{ marginLeft: '3%' }}>New Ballot</Button>\\n          </Menu>\\n        </Header>\\n\\n        <Content style={{ padding: '0 15%' }}>\\n          <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>Content</div>\\n        </Content>\\n\\n        <Footer style={{ textAlign: 'center'}}>\\n          Ant Design Â©2018 Created by Ant UED\\n        </Footer>\\n      </Layout>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{103:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},104:function(e,t,n){},167:function(e,t,n){\"use strict\";n.r(t);var a=n(1),o=n.n(a),r=n(7),i=n.n(r),l=(n(90),n(92),n(81)),c=(n(168),n(32)),s=n(72),m=n(73),d=n(82),u=n(74),g=n(83),y=(n(100),n(33)),f=(n(103),n(104),y.a.Header),p=y.a.Content,h=y.a.Footer,E=function(e){function t(){return Object(s.a)(this,t),Object(d.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(g.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(y.a,{className:\"layout\"},o.a.createElement(f,{style:{padding:\"0 15%\"}},o.a.createElement(\"div\",{className:\"logo\"}),o.a.createElement(c.a,{theme:\"dark\",mode:\"horizontal\",defaultSelectedKeys:[\"1\"],style:{lineHeight:\"64px\"}},o.a.createElement(c.a.Item,{key:\"1\",style:{marginLeft:\"60%\"}},\"All\"),o.a.createElement(c.a.Item,{key:\"2\"},\"Active\"),o.a.createElement(c.a.Item,{key:\"3\"},\"To Finalize\"),o.a.createElement(l.a,{style:{marginLeft:\"3%\"}},\"New Ballot\"))),o.a.createElement(p,{style:{padding:\"0 15%\"}},o.a.createElement(\"div\",{style:{background:\"#fff\",padding:24,minHeight:280}},\"Content\")),o.a.createElement(h,{style:{textAlign:\"center\"}},\"Ant Design \\xa92018 Created by Ant UED\"))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},85:function(e,t,n){e.exports=n(167)},90:function(e,t,n){}},[[85,2,1]]]);","extractedComments":[]}